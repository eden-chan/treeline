{"version":3,"file":"Reactor.js","sourceRoot":"","sources":["../src/Reactor.js"],"names":[],"mappings":"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","sourcesContent":["// @ts-check\nimport log from \"./utils/log\";\nimport weakHash from \"./utils/weakHash\";\nimport instaql from \"./instaql\";\nimport * as instaml from \"./instaml\";\nimport * as s from \"./store\";\nimport uuid from \"./utils/uuid\";\nimport IndexedDBStorage from \"./IndexedDBStorage\";\nimport WindowNetworkListener from \"./WindowNetworkListener\";\nimport * as authAPI from \"./authAPI\";\nimport * as StorageApi from \"./StorageAPI\";\nimport { buildPresenceSlice, hasPresenceResponseChanged } from \"./presence\";\nimport { Deferred } from \"./utils/Deferred\";\nimport { PersistedObject } from \"./utils/PersistedObject\";\nimport { extractTriples } from \"./model/instaqlResult\";\nimport { areObjectsDeepEqual } from \"./utils/object\";\nimport { createLinkIndex } from \"./utils/linkIndex\";\n\nconst STATUS = {\n  CONNECTING: \"connecting\",\n  OPENED: \"opened\",\n  AUTHENTICATED: \"authenticated\",\n  CLOSED: \"closed\",\n  ERRORED: \"errored\",\n};\n\nconst QUERY_ONCE_TIMEOUT = 10_000;\n\nconst WS_OPEN_STATUS = 1;\n\nconst defaultConfig = {\n  apiURI: \"https://api.instantdb.com\",\n  websocketURI: \"wss://api.instantdb.com/runtime/session\",\n};\n\n// Param that the backend adds if this is an oauth redirect\nconst OAUTH_REDIRECT_PARAM = \"_instant_oauth_redirect\";\n\nconst currentUserKey = `currentUser`;\n\nfunction isClient() {\n  const hasWindow = typeof window !== \"undefined\";\n  // this checks if we are running in a chrome extension\n  // @ts-expect-error\n  const isChrome = typeof chrome !== \"undefined\";\n\n  return hasWindow || isChrome;\n}\n\nfunction querySubsFromJSON(str) {\n  const parsed = JSON.parse(str);\n  for (const key in parsed) {\n    const v = parsed[key];\n    if (v?.result?.store) {\n      v.result.store = s.fromJSON(v.result.store);\n    }\n  }\n  return parsed;\n}\n\nfunction querySubsToJSON(querySubs) {\n  const jsonSubs = {};\n  for (const key in querySubs) {\n    const sub = querySubs[key];\n    const jsonSub = { ...sub };\n    if (sub.result?.store) {\n      jsonSub.result = {\n        ...sub.result,\n        store: s.toJSON(sub.result.store),\n      };\n    }\n    jsonSubs[key] = jsonSub;\n  }\n  return JSON.stringify(jsonSubs);\n}\n\n/**\n * @template {import('./presence').RoomSchemaShape} [RoomSchema = {}]\n */\nexport default class Reactor {\n  attrs;\n  _isOnline = true;\n  _isShutdown = false;\n  status = STATUS.CONNECTING;\n\n  /** @type {PersistedObject} */\n  querySubs;\n  /** @type {PersistedObject} */\n  pendingMutations;\n\n  /** @type {Record<string, Array<{ q: any, cb: (data: any) => any }>>} */\n  queryCbs = {};\n  /** @type {Record<string, Array<{ q: any, eventId: string, dfd: Deferred }>>} */\n  queryOnceDfds = {};\n  authCbs = [];\n  attrsCbs = [];\n  mutationErrorCbs = [];\n  config;\n  _persister;\n  mutationDeferredStore = new Map();\n  _reconnectTimeoutId = null;\n  _reconnectTimeoutMs = 0;\n  _ws;\n  _localIdPromises = {};\n  _errorMessage = null;\n  /** @type {Promise<null | {error: {message: string}}>}**/\n  _oauthCallbackResponse = null;\n\n  /** @type {null | import('./utils/linkIndex').LinkIndex}} */\n  _linkIndex = null;\n\n  /** @type BroadcastChannel | undefined */\n  _broadcastChannel;\n\n  /** @type {Record<string, {isConnected: boolean; error: any}>} */\n  _rooms = {};\n  /** @type {Record<string, boolean>} */\n  _roomsPendingLeave = {};\n  _presence = {};\n  _broadcastQueue = [];\n  _broadcastSubs = {};\n  _currentUserCached = { isLoading: true, error: undefined, user: undefined };\n  _beforeUnloadCbs = [];\n  _dataForQueryCache = {};\n\n  constructor(\n    config,\n    Storage = IndexedDBStorage,\n    NetworkListener = WindowNetworkListener,\n  ) {\n    this.config = { ...defaultConfig, ...config };\n\n    if (this.config.schema) {\n      this._linkIndex = createLinkIndex(this.config.schema);\n    }\n\n    // This is to protect us against running\n    // server-side.\n    if (!isClient()) {\n      return;\n    }\n    if (typeof BroadcastChannel === \"function\") {\n      this._broadcastChannel = new BroadcastChannel(\"@instantdb\");\n      this._broadcastChannel.addEventListener(\"message\", async (e) => {\n        if (e.data?.type === \"auth\") {\n          const res = await this.getCurrentUser();\n          this.updateUser(res.user);\n        }\n      });\n    }\n\n    this._oauthCallbackResponse = this._oauthLoginInit();\n\n    this._initStorage(Storage);\n\n    // kick off a request to cache it\n    this.getCurrentUser();\n\n    NetworkListener.getIsOnline().then((isOnline) => {\n      this._isOnline = isOnline;\n      this._startSocket();\n      NetworkListener.listen((isOnline) => {\n        // We do this because react native's NetInfo\n        // fires multiple online events.\n        // We only want to handle one state change\n        if (isOnline === this._isOnline) {\n          return;\n        }\n        this._isOnline = isOnline;\n        if (this._isOnline) {\n          this._startSocket();\n        }\n      });\n    });\n\n    if (typeof addEventListener !== \"undefined\") {\n      this._beforeUnload = this._beforeUnload.bind(this);\n      addEventListener(\"beforeunload\", this._beforeUnload);\n    }\n  }\n\n  _initStorage(Storage) {\n    this._persister = new Storage(`instant_${this.config.appId}_5`);\n    this.querySubs = new PersistedObject(\n      this._persister,\n      \"querySubs\",\n      {},\n      this._onMergeQuerySubs,\n      querySubsToJSON,\n      querySubsFromJSON,\n    );\n    this.pendingMutations = new PersistedObject(\n      this._persister,\n      \"pendingMutations\",\n      new Map(),\n      this._onMergePendingMutations,\n      (x) => {\n        return JSON.stringify([...x.entries()]);\n      },\n      (x) => {\n        return new Map(JSON.parse(x));\n      },\n    );\n    this._beforeUnloadCbs.push(() => {\n      this.pendingMutations.flush();\n      this.querySubs.flush();\n    });\n  }\n\n  _beforeUnload() {\n    for (const cb of this._beforeUnloadCbs) {\n      cb();\n    }\n  }\n\n  /**\n   * @param {'enqueued' | 'pending' | 'synced' | 'timeout' |  'error' } status\n   * @param string clientId\n   * @param {{message?: string, hint?: string, error?: Error}} [errDetails]\n   */\n  _finishTransaction(status, clientId, errDetails) {\n    const dfd = this.mutationDeferredStore.get(clientId);\n    this.mutationDeferredStore.delete(clientId);\n    const ok = status !== \"error\" && status !== \"timeout\";\n\n    if (!dfd && !ok) {\n      // console.erroring here, as there are no listeners to let know\n      console.error(\"Mutation failed\", { status, clientId, ...errDetails });\n    }\n    if (!dfd) {\n      return;\n    }\n    if (ok) {\n      dfd.resolve({ status, clientId });\n    } else {\n      dfd.reject({ status, clientId, ...errDetails });\n    }\n  }\n\n  _setStatus(status, err) {\n    this.status = status;\n    this._errorMessage = err;\n  }\n\n  /**\n   *  merge querySubs from storage and in memory. Has the following side\n   *  effects:\n   *  - We notify all queryCbs because results may been added during merge\n   */\n  _onMergeQuerySubs = (_storageSubs, inMemorySubs) => {\n    const storageSubs = _storageSubs || {};\n    const ret = { ...inMemorySubs };\n\n    // Consider an inMemorySub with no result;\n    // If we have a result from storageSubs, let's add it\n    Object.entries(inMemorySubs).forEach(([hash, querySub]) => {\n      const storageResult = storageSubs?.[hash]?.result;\n      const memoryResult = querySub.result;\n      if (storageResult && !memoryResult) {\n        ret[hash].result = storageResult;\n      }\n    });\n\n    // Consider a storageSub with no corresponding inMemorySub\n    // This means that at least at this point,\n    // the user has not asked to subscribe to the query.\n    // We may _still_ want to add it, because in just a\n    // few milliseconds, the user will ask to subscribe to the\n    // query.\n    // For now, we can't really tell if the user will ask to subscribe\n    // or not. So for now let's just add the first 10 queries from storage.\n    // Eventually, we could be smarter about this. For example,\n    // we can keep usage information about which queries are popular.\n    const storageKsToAdd = Object.keys(storageSubs)\n      .filter((k) => !inMemorySubs[k])\n      .slice(0, 10);\n\n    storageKsToAdd.forEach((k) => {\n      ret[k] = storageSubs[k];\n    });\n\n    // Okay, now we have merged our querySubs\n    this.querySubs.set((_) => ret);\n\n    this.loadedNotifyAll();\n  };\n\n  /**\n   * merge pendingMutations from storage and in memory. Has a side effect of\n   * sending mutations that were stored but not acked\n   */\n  _onMergePendingMutations = (storageMuts, inMemoryMuts) => {\n    const ret = new Map([...storageMuts.entries(), ...inMemoryMuts.entries()]);\n    this.pendingMutations.set((_) => ret);\n    this.loadedNotifyAll();\n    const rewrittenStorageMuts = this._rewriteMutations(\n      this.attrs,\n      storageMuts,\n    );\n    rewrittenStorageMuts.forEach((mut, k) => {\n      if (!inMemoryMuts.has(k) && !mut[\"tx-id\"]) {\n        this._sendMutation(k, mut);\n      }\n    });\n  };\n\n  /**\n   * On refresh we clear out pending mutations that we know have been applied\n   * by the server and thus those mutations are applied in the instaql result\n   * returned by the server\n   */\n  _cleanPendingMutations(txId) {\n    this.pendingMutations.set((prev) => {\n      const copy = new Map(prev);\n      [...prev.entries()].forEach(([eventId, mut]) => {\n        if (mut[\"tx-id\"] <= txId) {\n          copy.delete(eventId);\n        }\n      });\n      return copy;\n    });\n  }\n\n  _flushEnqueuedRoomData(roomId) {\n    const enqueuedUserPresence = this._presence[roomId]?.result?.user;\n    const enqueuedBroadcasts = this._broadcastQueue[roomId];\n\n    this._broadcastQueue[roomId] = [];\n\n    if (enqueuedUserPresence) {\n      this._trySetPresence(roomId, enqueuedUserPresence);\n    }\n\n    if (enqueuedBroadcasts) {\n      for (const item of enqueuedBroadcasts) {\n        const { topic, roomType, data } = item;\n        this._tryBroadcast(roomId, roomType, topic, data);\n      }\n    }\n  }\n\n  _handleReceive(msg) {\n    // opt-out, enabled by default if schema\n    const enableCardinalityInference =\n      Boolean(this.config.schema) &&\n      (\"cardinalityInference\" in this.config\n        ? Boolean(this.config.cardinalityInference)\n        : true);\n\n    switch (msg.op) {\n      case \"init-ok\":\n        this._setStatus(STATUS.AUTHENTICATED);\n        this._reconnectTimeoutMs = 0;\n        this._setAttrs(msg.attrs);\n        this._flushPendingMessages();\n        // (EPH): set session-id, so we know\n        // which item is us\n        this._sessionId = msg[\"session-id\"];\n\n        for (const roomId of Object.keys(this._rooms)) {\n          this._tryJoinRoom(roomId);\n        }\n        break;\n      case \"add-query-exists\":\n        this.notifyOneQueryOnce(weakHash(msg.q));\n        break;\n      case \"add-query-ok\":\n        const { q, result, \"processed-tx-id\": addQueryTxId } = msg;\n        this._cleanPendingMutations(addQueryTxId);\n        const hash = weakHash(q);\n        const pageInfo = result?.[0]?.data?.[\"page-info\"];\n        const aggregate = result?.[0]?.data?.[\"aggregate\"];\n        const triples = extractTriples(result);\n        const store = s.createStore(\n          this.attrs,\n          triples,\n          enableCardinalityInference,\n          this._linkIndex,\n        );\n        this.querySubs.set((prev) => {\n          prev[hash].result = { store, pageInfo, aggregate };\n          return prev;\n        });\n        this.notifyOne(hash);\n        this.notifyOneQueryOnce(hash);\n        break;\n      case \"refresh-ok\":\n        const { computations, attrs, \"processed-tx-id\": refreshOkTxId } = msg;\n        this._cleanPendingMutations(refreshOkTxId);\n        this._setAttrs(attrs);\n        const updates = computations.map((x) => {\n          const q = x[\"instaql-query\"];\n          const result = x[\"instaql-result\"];\n          const hash = weakHash(q);\n          const triples = extractTriples(result);\n          const store = s.createStore(\n            this.attrs,\n            triples,\n            enableCardinalityInference,\n            this._linkIndex,\n          );\n          const pageInfo = result?.[0]?.data?.[\"page-info\"];\n          const aggregate = result?.[0]?.data?.[\"aggregate\"];\n          return { hash, store, pageInfo, aggregate };\n        });\n        updates.forEach(({ hash, store, pageInfo, aggregate }) => {\n          this.querySubs.set((prev) => {\n            prev[hash].result = { store, pageInfo, aggregate };\n            return prev;\n          });\n        });\n        updates.forEach(({ hash }) => {\n          this.notifyOne(hash);\n        });\n        break;\n      case \"transact-ok\":\n        const { \"client-event-id\": eventId, \"tx-id\": txId } = msg;\n        const muts = this._rewriteMutations(\n          this.attrs,\n          this.pendingMutations.currentValue,\n        );\n        const prevMutation = muts.get(eventId);\n        if (!prevMutation) {\n          break;\n        }\n\n        const mut = { ...prevMutation, \"tx-id\": txId };\n\n        this.pendingMutations.set((prev) => {\n          prev.set(eventId, mut);\n          return prev;\n        });\n\n        this._finishTransaction(\"synced\", eventId);\n\n        const newAttrs = prevMutation[\"tx-steps\"]\n          .filter(([action, ..._args]) => action === \"add-attr\")\n          .map(([_action, attr]) => attr)\n          .concat(Object.values(this.attrs));\n        this._setAttrs(newAttrs);\n        break;\n      case \"refresh-presence\":\n        const roomId = msg[\"room-id\"];\n        this._setPresencePeers(roomId, msg.data);\n        this._notifyPresenceSubs(roomId);\n        break;\n      case \"server-broadcast\":\n        const room = msg[\"room-id\"];\n        const topic = msg.topic;\n        this._notifyBroadcastSubs(room, topic, msg);\n        break;\n      case \"join-room-ok\":\n        const loadingRoomId = msg[\"room-id\"];\n        const joinedRoom = this._rooms[loadingRoomId];\n\n        if (!joinedRoom) {\n          if (this._roomsPendingLeave[roomId]) {\n            this._tryLeaveRoom(loadingRoomId);\n            delete this._roomsPendingLeave[roomId];\n          }\n\n          break;\n        }\n\n        joinedRoom.isConnected = true;\n        this._notifyPresenceSubs(loadingRoomId);\n        this._flushEnqueuedRoomData(loadingRoomId);\n        break;\n      case \"join-room-error\":\n        const errorRoomId = msg[\"room-id\"];\n        const errorRoom = this._rooms[errorRoomId];\n        if (errorRoom) {\n          errorRoom.error = msg[\"error\"];\n        }\n        this._notifyPresenceSubs(errorRoomId);\n        break;\n      case \"error\":\n        this._handleReceiveError(msg);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * @param {'timeout' | 'error'} status\n   * @param {string} eventId\n   * @param {{message?: string, hint?: string, error?: Error}} errDetails\n   */\n  _handleMutationError(status, eventId, errDetails) {\n    const mut = this.pendingMutations.currentValue.get(eventId);\n\n    if (mut && (status !== \"timeout\" || !mut[\"tx-id\"])) {\n      this.pendingMutations.set((prev) => {\n        prev.delete(eventId);\n        return prev;\n      });\n      this.notifyAll();\n      this.notifyAttrsSubs();\n      this.notifyMutationErrorSubs(errDetails);\n      this._finishTransaction(status, eventId, errDetails);\n    }\n  }\n\n  _handleReceiveError(msg) {\n    const eventId = msg[\"client-event-id\"];\n    const prevMutation = this.pendingMutations.currentValue.get(eventId);\n    const errorMessage = {\n      message: msg.message || \"Uh-oh, something went wrong. Ping Joe & Stopa.\",\n    };\n\n    if (prevMutation) {\n      // This must be a transaction error\n      const errDetails = {\n        message: msg.message,\n        hint: msg.hint,\n      };\n      this._handleMutationError(\"error\", eventId, errDetails);\n      return;\n    }\n\n    const q = msg.q || msg[\"original-event\"]?.q;\n    if (q) {\n      const hash = weakHash(q);\n\n      // This must be a query error\n      this.querySubs.set((prev) => {\n        delete prev[hash];\n        return prev;\n      });\n      this.notifyQueryError(weakHash(q), errorMessage);\n      this.notifyQueryOnceError(hash, eventId, errorMessage);\n      return;\n    }\n\n    const isInitError = msg[\"original-event\"]?.op === \"init\";\n    if (isInitError) {\n      if (\n        msg.type === \"record-not-found\" &&\n        msg.hint?.[\"record-type\"] === \"app-user\"\n      ) {\n        // User has been logged out\n        this.changeCurrentUser(null);\n        return;\n      }\n\n      // We failed to init\n\n      this._setStatus(STATUS.ERRORED, errorMessage);\n      this.notifyAll();\n      return;\n    }\n    // We've caught some error which has no corresponding listener.\n    // Let's console.error to let the user know.\n    const errorObj = { ...msg };\n    delete errorObj.message;\n    delete errorObj.hint;\n    console.error(msg.message, errorObj);\n    if (msg.hint) {\n      console.error(\n        \"This error comes with some debugging information. Here it is: \\n\",\n        msg.hint,\n      );\n    }\n  }\n\n  notifyQueryOnceError(hash, eventId, e) {\n    const r = this.queryOnceDfds[hash]?.find((r) => r.eventId === eventId);\n    if (!r) return;\n    r.dfd.reject(e);\n  }\n\n  _setAttrs(attrs) {\n    this.attrs = attrs.reduce((acc, attr) => {\n      acc[attr.id] = attr;\n      return acc;\n    }, {});\n\n    this.notifyAttrsSubs();\n  }\n\n  // ---------------------------\n  // Queries\n\n  getPreviousResult = (q) => {\n    const hash = weakHash(q);\n    return this.dataForQuery(hash);\n  };\n\n  _startQuerySub(q, hash) {\n    const eventId = uuid();\n    this.querySubs.set((prev) => {\n      prev[hash] = prev[hash] || { q, result: null, eventId };\n      return prev;\n    });\n    this._trySendAuthed(eventId, { op: \"add-query\", q });\n\n    return eventId;\n  }\n\n  /**\n   *  When a user subscribes to a query the following side effects occur:\n   *\n   *  - We update querySubs to include the new query\n   *  - We update queryCbs to include the new cb\n   *  - If we already have a result for the query we call cb immediately\n   *  - We send the server an `add-query` message\n   *\n   *  Returns an unsubscribe function\n   */\n  subscribeQuery(q, cb) {\n    const hash = weakHash(q);\n\n    const prevResult = this.getPreviousResult(q);\n    if (prevResult) {\n      cb(prevResult);\n    }\n\n    this.queryCbs[hash] = this.queryCbs[hash] ?? [];\n    this.queryCbs[hash].push({ q, cb });\n\n    this._startQuerySub(q, hash);\n\n    return () => {\n      this._unsubQuery(q, hash, cb);\n    };\n  }\n\n  async queryOnce(q) {\n    if (!this._isOnline) {\n      throw new Error(\n        \"Offline: Cannot execute query because the device is offline.\",\n      );\n    }\n\n    const hash = weakHash(q);\n    const dfd = new Deferred();\n\n    const eventId = this._startQuerySub(q, hash);\n\n    this.queryOnceDfds[hash] = this.queryOnceDfds[hash] ?? [];\n    this.queryOnceDfds[hash].push({ q, dfd, eventId });\n\n    setTimeout(\n      () => dfd.reject(new Error(\"Query timed out\")),\n      QUERY_ONCE_TIMEOUT,\n    );\n\n    return dfd.promise;\n  }\n\n  _completeQueryOnce(q, hash, dfd) {\n    if (!this.queryOnceDfds[hash]) return;\n\n    this.queryOnceDfds[hash] = this.queryOnceDfds[hash].filter(\n      (r) => r.dfd !== dfd,\n    );\n\n    this._cleanupQuery(q, hash);\n  }\n\n  _unsubQuery(q, hash, cb) {\n    if (!this.queryCbs[hash]) return;\n\n    this.queryCbs[hash] = this.queryCbs[hash].filter((r) => r.cb !== cb);\n\n    this._cleanupQuery(q, hash);\n  }\n\n  _cleanupQuery(q, hash) {\n    const hasListeners =\n      this.queryCbs[hash]?.length || this.queryOnceDfds[hash]?.length;\n\n    if (hasListeners) return;\n\n    delete this.queryCbs[hash];\n    delete this.queryOnceDfds[hash];\n\n    this._trySendAuthed(uuid(), { op: \"remove-query\", q });\n  }\n\n  // When we `pushTx`, it's possible that we don't yet have `this.attrs`\n  // This means that `tx-steps` in `pendingMutations` will include `add-attr`\n  // commands for attrs that already exist.\n  //\n  // This will also affect `add-triple` and `retract-triple` which\n  // reference attr-ids that do not match the server.\n  //\n  // We fix this by rewriting `tx-steps` in each `pendingMutation`.\n  // We remove `add-attr` commands for attrs that already exist.\n  // We update `add-triple` and `retract-triple` commands to use the\n  // server attr-ids.\n  _rewriteMutations(attrs, muts) {\n    if (!attrs) return muts;\n    const findExistingAttr = (attr) => {\n      const [_, etype, label] = attr[\"forward-identity\"];\n      const existing = instaml.getAttrByFwdIdentName(attrs, etype, label);\n      return existing;\n    };\n    const findReverseAttr = (attr) => {\n      const [_, etype, label] = attr[\"forward-identity\"];\n      const revAttr = instaml.getAttrByReverseIdentName(attrs, etype, label);\n      return revAttr;\n    };\n    const mapping = { attrIdMap: {}, refSwapAttrIds: new Set() };\n    const rewriteTxSteps = (txSteps) => {\n      const retTxSteps = [];\n      for (const txStep of txSteps) {\n        const [action] = txStep;\n\n        // Handles add-attr\n        // If existing, we drop it, and track it\n        // to update add/retract triples\n        if (action === \"add-attr\") {\n          const [_action, attr] = txStep;\n          const existing = findExistingAttr(attr);\n          if (existing) {\n            mapping.attrIdMap[attr.id] = existing.id;\n            continue;\n          }\n          if (attr[\"value-type\"] === \"ref\") {\n            const revAttr = findReverseAttr(attr);\n            if (revAttr) {\n              mapping.attrIdMap[attr.id] = revAttr.id;\n              mapping.refSwapAttrIds.add(attr.id);\n              continue;\n            }\n          }\n        }\n\n        // Handles add-triple|retract-triple\n        // If in mapping, we update the attr-id\n        const newTxStep = instaml.rewriteStep(mapping, txStep);\n\n        retTxSteps.push(newTxStep);\n      }\n      return retTxSteps;\n    };\n    const rewritten = new Map();\n    for (const [k, mut] of muts.entries()) {\n      rewritten.set(k, { ...mut, \"tx-steps\": rewriteTxSteps(mut[\"tx-steps\"]) });\n    }\n    return rewritten;\n  }\n\n  // ---------------------------\n  // Transact\n\n  optimisticAttrs() {\n    const pendingMutationSteps = [\n      ...this.pendingMutations.currentValue.values(),\n    ] // hack due to Map()\n      .flatMap((x) => x[\"tx-steps\"]);\n\n    const deletedAttrIds = new Set(\n      pendingMutationSteps\n        .filter(([action, _attr]) => action === \"delete-attr\")\n        .map(([_action, id]) => id),\n    );\n\n    const pendingAttrs = [];\n    for (const [_action, attr] of pendingMutationSteps) {\n      if (_action === \"add-attr\") {\n        pendingAttrs.push(attr);\n      } else if (\n        _action === \"update-attr\" &&\n        attr.id &&\n        this.attrs?.[attr.id]\n      ) {\n        const fullAttr = { ...this.attrs[attr.id], ...attr };\n        pendingAttrs.push(fullAttr);\n      }\n    }\n\n    const attrsWithoutDeleted = [\n      ...Object.values(this.attrs || {}),\n      ...pendingAttrs,\n    ].filter((a) => !deletedAttrIds.has(a.id));\n\n    const attrsRecord = Object.fromEntries(\n      attrsWithoutDeleted.map((a) => [a.id, a]),\n    );\n\n    return attrsRecord;\n  }\n\n  /** Runs instaql on a query and a store */\n  dataForQuery(hash) {\n    const errorMessage = this._errorMessage;\n    if (errorMessage) {\n      return { error: errorMessage };\n    }\n    if (!this.querySubs) return;\n    if (!this.pendingMutations) return;\n    const querySubVersion = this.querySubs.version();\n    const querySubs = this.querySubs.currentValue;\n    const pendingMutationsVersion = this.pendingMutations.version();\n    const pendingMutations = this.pendingMutations.currentValue;\n\n    const { q, result } = querySubs[hash] || {};\n    if (!result) return;\n\n    const cached = this._dataForQueryCache[hash];\n    if (\n      cached &&\n      querySubVersion === cached.querySubVersion &&\n      pendingMutationsVersion === cached.pendingMutationsVersion\n    ) {\n      return cached.data;\n    }\n\n    const { store, pageInfo, aggregate } = result;\n    const muts = this._rewriteMutations(store.attrs, pendingMutations);\n\n    const txSteps = [...muts.values()].flatMap((x) => x[\"tx-steps\"]);\n    const newStore = s.transact(store, txSteps);\n    const resp = instaql({ store: newStore, pageInfo, aggregate }, q);\n\n    this._dataForQueryCache[hash] = {\n      querySubVersion,\n      pendingMutationsVersion,\n      data: resp,\n    };\n\n    return resp;\n  }\n\n  /** Re-run instaql and call all callbacks with new data */\n  notifyOne = (hash) => {\n    const cbs = this.queryCbs[hash] ?? [];\n    const prevData = this._dataForQueryCache[hash]?.data;\n    const data = this.dataForQuery(hash);\n\n    if (!data) return;\n    if (areObjectsDeepEqual(data, prevData)) return;\n\n    cbs.forEach((r) => r.cb(data));\n  };\n\n  notifyOneQueryOnce = (hash) => {\n    const dfds = this.queryOnceDfds[hash] ?? [];\n    const data = this.dataForQuery(hash);\n\n    dfds.forEach((r) => {\n      this._completeQueryOnce(r.q, hash, r.dfd);\n      r.dfd.resolve(data);\n    });\n  };\n\n  notifyQueryError = (hash, error) => {\n    const cbs = this.queryCbs[hash] || [];\n    cbs.forEach((r) => r.cb({ error }));\n  };\n\n  /** Re-compute all subscriptions */\n  notifyAll() {\n    Object.keys(this.queryCbs).forEach((hash) => {\n      this.notifyOne(hash);\n    });\n  }\n\n  loadedNotifyAll() {\n    if (this.pendingMutations.isLoading() || this.querySubs.isLoading()) return;\n    this.notifyAll();\n  }\n\n  /** Applies transactions locally and sends transact message to server */\n  pushTx = (chunks) => {\n    try {\n      const txSteps = instaml.transform(this.optimisticAttrs(), chunks);\n      return this.pushOps(txSteps);\n    } catch (e) {\n      return this.pushOps([], e);\n    }\n  };\n\n  /**\n   * @param {*} txSteps\n   * @param {*} [error]\n   * @returns\n   */\n  pushOps = (txSteps, error) => {\n    const eventId = uuid();\n    const mutation = {\n      op: \"transact\",\n      \"tx-steps\": txSteps,\n      error,\n    };\n    this.pendingMutations.set((prev) => {\n      prev.set(eventId, mutation);\n      return prev;\n    });\n\n    const dfd = new Deferred();\n    this.mutationDeferredStore.set(eventId, dfd);\n    this._sendMutation(eventId, mutation);\n\n    this.notifyAll();\n\n    return dfd.promise;\n  };\n\n  shutdown() {\n    this._isShutdown = true;\n    this._ws.close();\n  }\n\n  /**\n   * Sends mutation to server and schedules a timeout to cancel it if\n   * we don't hear back in time.\n   * Note: If we're offline we don't schedule a timeout, we'll schedule it\n   * later once we're back online and send the mutation again\n   *\n   */\n  _sendMutation(eventId, mutation) {\n    if (mutation.error) {\n      this._handleMutationError(\"error\", eventId, {\n        error: mutation.error,\n        message: mutation.error.message,\n      });\n      return;\n    }\n    if (this.status !== STATUS.AUTHENTICATED) {\n      this._finishTransaction(\"enqueued\", eventId);\n      return;\n    }\n    const timeoutMs = Math.max(\n      5000,\n      this.pendingMutations.currentValue.size * 5000,\n    );\n\n    if (!this._isOnline) {\n      this._finishTransaction(\"enqueued\", eventId);\n    } else {\n      this._trySend(eventId, mutation);\n\n      // If a transaction is pending for over 3 seconds,\n      // we want to unblock the UX, so mark it as pending\n      // and keep trying to process the transaction in the background\n      setTimeout(() => {\n        this._finishTransaction(\"pending\", eventId);\n      }, 3_000);\n\n      setTimeout(() => {\n        if (!this._isOnline) {\n          return;\n        }\n        // If we are here, this means that we have sent this mutation, we are online\n        // but we have not received a response. If it's this long, something must be wrong,\n        // so we error with a timeout.\n        this._handleMutationError(\"timeout\", eventId, {\n          message: \"transaction timed out\",\n        });\n      }, timeoutMs);\n    }\n  }\n\n  // ---------------------------\n  // Websocket\n\n  /** Send messages we accumulated while we were connecting */\n  _flushPendingMessages() {\n    const subs = Object.keys(this.queryCbs).map((hash) => {\n      return this.querySubs.currentValue[hash];\n    });\n    // Note: we should not have any nulls in subs, but we're\n    // doing this defensively just in case.\n    const safeSubs = subs.filter((x) => x);\n    safeSubs.forEach(({ eventId, q }) => {\n      this._trySendAuthed(eventId, { op: \"add-query\", q });\n    });\n\n    Object.values(this.queryOnceDfds)\n      .flat()\n      .forEach(({ eventId, q }) => {\n        this._trySendAuthed(eventId, { op: \"add-query\", q });\n      });\n\n    const muts = this._rewriteMutations(\n      this.attrs,\n      this.pendingMutations.currentValue,\n    );\n    muts.forEach((mut, eventId) => {\n      if (!mut[\"tx-id\"]) {\n        this._sendMutation(eventId, mut);\n      }\n    });\n  }\n\n  _trySendAuthed(eventId, msg) {\n    if (this.status !== STATUS.AUTHENTICATED) {\n      return;\n    }\n    this._trySend(eventId, msg);\n  }\n\n  _trySend(eventId, msg) {\n    if (this._ws.readyState !== WS_OPEN_STATUS) {\n      return;\n    }\n    this._ws.send(JSON.stringify({ \"client-event-id\": eventId, ...msg }));\n  }\n\n  _wsOnOpen = () => {\n    log.info(\"[socket] connected\");\n    this._setStatus(STATUS.OPENED);\n    this.getCurrentUser().then((resp) => {\n      this._trySend(uuid(), {\n        op: \"init\",\n        \"app-id\": this.config.appId,\n        \"refresh-token\": resp.user?.[\"refresh_token\"],\n        // If an admin token is provided for an app, we will\n        // skip all permission checks. This is an advanced feature,\n        // to let users write internal tools\n        // This option is not exposed in `Config`, as it's\n        // not ready for prme time\n        \"__admin-token\": this.config.__adminToken,\n      });\n    });\n  };\n\n  _wsOnMessage = (e) => {\n    this._handleReceive(JSON.parse(e.data.toString()));\n  };\n\n  _wsOnError = (e) => {\n    log.error(\"[socket] error: \", e);\n  };\n\n  _wsOnClose = () => {\n    this._setStatus(STATUS.CLOSED);\n\n    for (const room of Object.values(this._rooms)) {\n      room.isConnected = false;\n    }\n\n    if (this._isShutdown) {\n      log.info(\n        \"[socket-close] socket has been shut down and will not reconnect\",\n      );\n      return;\n    }\n    if (this._isManualClose) {\n      this._isManualClose = false;\n      log.info(\"[socket-close] manual close, will not reconnect\");\n      return;\n    }\n\n    log.info(\"[socket-close] scheduling reconnect\", this._reconnectTimeoutMs);\n    setTimeout(() => {\n      this._reconnectTimeoutMs = Math.min(\n        this._reconnectTimeoutMs + 1000,\n        10000,\n      );\n      if (!this._isOnline) {\n        log.info(\"[socket-close] we are offline, no need to start socket\");\n        return;\n      }\n      this._startSocket();\n    }, this._reconnectTimeoutMs);\n  };\n\n  _ensurePreviousSocketClosed() {\n    if (this._ws && this._ws.readyState === WS_OPEN_STATUS) {\n      this._isManualClose = true;\n      this._ws.close();\n    }\n  }\n\n  _startSocket() {\n    this._ensurePreviousSocketClosed();\n    this._ws = new WebSocket(\n      `${this.config.websocketURI}?app_id=${this.config.appId}`,\n    );\n    this._ws.onopen = this._wsOnOpen;\n    this._ws.onmessage = this._wsOnMessage;\n    this._ws.onclose = this._wsOnClose;\n  }\n\n  /**\n   * Given a key, returns a stable local id, unique to this device and app.\n   *\n   * This can be useful if you want to create guest ids for example.\n   *\n   * Note: If the user deletes their local storage, this id will change.\n   *\n   * We use this._localIdPromises to ensure that we only generate a local\n   * id once, even if multiple callers call this function concurrently.\n   */\n  async getLocalId(name) {\n    const k = `localToken_${name}`;\n    const id = await this._persister.getItem(k);\n    if (id) return id;\n    if (this._localIdPromises[k]) {\n      return this._localIdPromises[k];\n    }\n    const newId = uuid();\n    this._localIdPromises[k] = this._persister\n      .setItem(k, newId)\n      .then(() => newId);\n    return this._localIdPromises[k];\n  }\n\n  // ----\n  // Auth\n  _replaceUrlAfterOAuth() {\n    if (typeof URL === \"undefined\") {\n      return;\n    }\n    const url = new URL(window.location.href);\n    if (url.searchParams.get(OAUTH_REDIRECT_PARAM)) {\n      const startUrl = url.toString();\n      url.searchParams.delete(OAUTH_REDIRECT_PARAM);\n      url.searchParams.delete(\"code\");\n      url.searchParams.delete(\"error\");\n      const newPath =\n        url.pathname +\n        (url.searchParams.size ? \"?\" + url.searchParams : \"\") +\n        url.hash;\n      // Note: In next.js, this will revert to the old state if user navigates\n      //       back. We would need to allow framework specific routing to work\n      //       around that problem.\n      history.replaceState(history.state, \"\", newPath);\n\n      // navigation is part of the HTML spec, but not supported by Safari\n      // or Firefox yet:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API#browser_compatibility\n      if (\n        // @ts-ignore (waiting for ts support)\n        typeof navigation === \"object\" &&\n        // @ts-ignore (waiting for ts support)\n        typeof navigation.addEventListener === \"function\" &&\n        // @ts-ignore (waiting for ts support)\n        typeof navigation.removeEventListener === \"function\"\n      ) {\n        let ran = false;\n\n        // The next.js app router will reset the URL when the router loads.\n        // This puts it back after the router loads.\n        const listener = (e) => {\n          if (!ran) {\n            ran = true;\n            // @ts-ignore (waiting for ts support)\n            navigation.removeEventListener(\"navigate\", listener);\n            if (\n              !e.userInitiated &&\n              e.navigationType === \"replace\" &&\n              e.destination?.url === startUrl\n            ) {\n              history.replaceState(history.state, \"\", newPath);\n            }\n          }\n        };\n        // @ts-ignore (waiting for ts support)\n        navigation.addEventListener(\"navigate\", listener);\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns Promise<null | {error: {message: string}}>\n   */\n  async _oauthLoginInit() {\n    if (\n      typeof window === \"undefined\" ||\n      typeof window.location === \"undefined\" ||\n      typeof URLSearchParams === \"undefined\"\n    ) {\n      return null;\n    }\n    const params = new URLSearchParams(window.location.search);\n    if (!params.get(OAUTH_REDIRECT_PARAM)) {\n      return null;\n    }\n\n    const error = params.get(\"error\");\n    if (error) {\n      this._replaceUrlAfterOAuth();\n      return { error: { message: error } };\n    }\n    const code = params.get(\"code\");\n    if (!code) {\n      return null;\n    }\n    this._replaceUrlAfterOAuth();\n    try {\n      const { user } = await authAPI.exchangeCodeForToken({\n        apiURI: this.config.apiURI,\n        appId: this.config.appId,\n        code,\n      });\n      this.setCurrentUser(user);\n      return null;\n    } catch (e) {\n      if (\n        e?.body?.type === \"record-not-found\" &&\n        e?.body?.hint?.[\"record-type\"] === \"app-oauth-code\" &&\n        (await this._hasCurrentUser())\n      ) {\n        // We probably just weren't able to clean up the URL, so\n        // let's just ignore this error\n        return null;\n      }\n      const message = e?.body?.message || \"Error logging in.\";\n      return { error: { message } };\n    }\n  }\n\n  async _waitForOAuthCallbackResponse() {\n    return await this._oauthCallbackResponse;\n  }\n\n  __subscribeMutationErrors(cb) {\n    this.mutationErrorCbs.push(cb);\n\n    return () => {\n      this.mutationErrorCbs = this.mutationErrorCbs.filter((x) => x !== cb);\n    };\n  }\n\n  subscribeAuth(cb) {\n    this.authCbs.push(cb);\n    const currUserCached = this._currentUserCached;\n    if (!currUserCached.isLoading) {\n      cb(this._currentUserCached);\n    }\n    let unsubbed = false;\n    this.getCurrentUser().then((resp) => {\n      if (unsubbed) return;\n      if (areObjectsDeepEqual(resp, currUserCached)) return;\n      cb(resp);\n    });\n    return () => {\n      unsubbed = true;\n      this.authCbs = this.authCbs.filter((x) => x !== cb);\n    };\n  }\n\n  subscribeAttrs(cb) {\n    this.attrsCbs.push(cb);\n\n    if (this.attrs) {\n      cb(this.attrs);\n    }\n\n    return () => {\n      this.attrsCbs = this.attrsCbs.filter((x) => x !== cb);\n    };\n  }\n\n  notifyAuthSubs(user) {\n    this.authCbs.forEach((cb) => cb(user));\n  }\n\n  notifyMutationErrorSubs(error) {\n    this.mutationErrorCbs.forEach((cb) => cb(error));\n  }\n\n  notifyAttrsSubs() {\n    if (!this.attrs) return;\n    const oas = this.optimisticAttrs();\n    this.attrsCbs.forEach((cb) => cb(oas));\n  }\n\n  async setCurrentUser(user) {\n    await this._persister.setItem(currentUserKey, JSON.stringify(user));\n  }\n\n  getCurrentUserCached() {\n    return this._currentUserCached;\n  }\n\n  async getCurrentUser() {\n    const oauthResp = await this._waitForOAuthCallbackResponse();\n    if (oauthResp?.error) {\n      const errorV = { error: oauthResp.error, user: undefined };\n      this._currentUserCached = { isLoading: false, ...errorV };\n      return errorV;\n    }\n    const user = await this._persister.getItem(currentUserKey);\n    const userV = { user: JSON.parse(user), error: undefined };\n    this._currentUserCached = {\n      isLoading: false,\n      ...userV,\n    };\n    return userV;\n  }\n\n  async _hasCurrentUser() {\n    const user = await this._persister.getItem(currentUserKey);\n    return JSON.parse(user) != null;\n  }\n\n  async changeCurrentUser(newUser) {\n    const { user: oldUser } = await this.getCurrentUser();\n    if (areObjectsDeepEqual(oldUser, newUser)) {\n      // We were already logged in as the newUser, don't\n      // bother updating\n      return;\n    }\n    await this.setCurrentUser(newUser);\n    // We need to remove all `result` from querySubs,\n    // as they are no longer valid for the new user\n    this.updateUser(newUser);\n\n    try {\n      this._broadcastChannel?.postMessage({ type: \"auth\" });\n    } catch (error) {\n      console.error(\"Error posting message to broadcast channel\", error);\n    }\n  }\n\n  updateUser(newUser) {\n    const newV = { error: undefined, user: newUser };\n    this._currentUserCached = { isLoading: false, ...newV };\n    this.querySubs.set((prev) => {\n      Object.keys(prev).forEach((k) => {\n        delete prev[k].result;\n      });\n      return prev;\n    });\n    this._reconnectTimeoutMs = 0;\n    this._ws.close();\n    this._oauthCallbackResponse = null;\n    this.notifyAuthSubs(newV);\n  }\n\n  sendMagicCode({ email }) {\n    return authAPI.sendMagicCode({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      email: email,\n    });\n  }\n\n  async signInWithMagicCode({ email, code }) {\n    const res = await authAPI.verifyMagicCode({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      email,\n      code,\n    });\n    this.changeCurrentUser(res.user);\n    return res;\n  }\n\n  async signInWithCustomToken(authToken) {\n    const res = await authAPI.verifyRefreshToken({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      refreshToken: authToken,\n    });\n    this.changeCurrentUser(res.user);\n  }\n\n  async signOut() {\n    const currentUser = await this.getCurrentUser();\n    const refreshToken = currentUser?.user?.refresh_token;\n    if (refreshToken) {\n      try {\n        await authAPI.signOut({\n          apiURI: this.config.apiURI,\n          appId: this.config.appId,\n          refreshToken,\n        });\n      } catch (e) {}\n    }\n\n    this.changeCurrentUser(null);\n  }\n\n  /**\n   * Creates an OAuth authorization URL.\n   * @param {Object} params - The parameters to create the authorization URL.\n   * @param {string} params.clientName - The name of the client requesting authorization.\n   * @param {string} params.redirectURL - The URL to redirect users to after authorization.\n   * @returns {string} The created authorization URL.\n   */\n  createAuthorizationURL({ clientName, redirectURL }) {\n    const { apiURI, appId } = this.config;\n    return `${apiURI}/runtime/oauth/start?app_id=${appId}&client_name=${clientName}&redirect_uri=${redirectURL}`;\n  }\n\n  async exchangeCodeForToken({ code, codeVerifier }) {\n    const res = await authAPI.exchangeCodeForToken({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      code: code,\n      codeVerifier,\n    });\n    this.changeCurrentUser(res.user);\n    return res;\n  }\n\n  issuerURI() {\n    const { apiURI, appId } = this.config;\n    return `${apiURI}/runtime/${appId}`;\n  }\n\n  /**\n   * @param {Object} params\n   * @param {string} params.clientName - The name of the client requesting authorization.\n   * @param {string} params.idToken - The id_token from the external service\n   * @param {string | null | undefined} [params.nonce] - The nonce used when requesting the id_token from the external service\n   */\n  async signInWithIdToken({ idToken, clientName, nonce }) {\n    const currentUser = await this.getCurrentUser();\n    const refreshToken = currentUser?.user?.refresh_token;\n\n    const res = await authAPI.signInWithIdToken({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      idToken,\n      clientName,\n      nonce,\n      refreshToken,\n    });\n    this.changeCurrentUser(res.user);\n    return res;\n  }\n\n  // --------\n  // Rooms\n\n  joinRoom(roomId) {\n    if (!this._rooms[roomId]) {\n      this._rooms[roomId] = {\n        isConnected: false,\n        error: undefined,\n      };\n    }\n\n    this._tryJoinRoom(roomId);\n\n    return () => {\n      this._cleanupRoom(roomId);\n    };\n  }\n\n  _cleanupRoom(roomId) {\n    if (\n      !this._presence[roomId]?.handlers?.length &&\n      !Object.keys(this._broadcastSubs[roomId] ?? {}).length\n    ) {\n      const isConnected = this._rooms[roomId]?.isConnected;\n\n      delete this._rooms[roomId];\n      delete this._presence[roomId];\n      delete this._broadcastSubs[roomId];\n\n      if (isConnected) {\n        this._tryLeaveRoom(roomId);\n      } else {\n        this._roomsPendingLeave[roomId] = true;\n      }\n    }\n  }\n\n  // --------\n  // Presence\n\n  /**\n   * @template {keyof RoomSchema} RoomType\n   * @template {keyof RoomSchema[RoomType]['presence']} Keys\n   * @param {RoomType} roomType\n   * @param {string | number} roomId\n   * @param {import('./presence').PresenceOpts<RoomSchema[RoomType]['presence'], Keys>} opts\n   * @returns {import('./presence').PresenceResponse<RoomSchema[RoomType]['presence'], Keys>}\n   */\n  getPresence(roomType, roomId, opts = {}) {\n    const room = this._rooms[roomId];\n    const presence = this._presence[roomId];\n    if (!room || !presence || !presence.result) return null;\n\n    return {\n      ...buildPresenceSlice(presence.result, opts, this._sessionId),\n      isLoading: !room.isConnected,\n      error: room.error,\n    };\n  }\n\n  /**\n   * @template {keyof RoomSchema} RoomType\n   * @param {RoomType} roomType\n   * @param {string | number} roomId\n   * @param {Partial<RoomSchema[RoomType]['presence']>} partialData\n   */\n  publishPresence(roomType, roomId, partialData) {\n    const room = this._rooms[roomId];\n    const presence = this._presence[roomId];\n\n    if (!room || !presence) {\n      return;\n    }\n\n    presence.result = presence.result || {};\n    const data = {\n      ...presence.result.user,\n      ...partialData,\n    };\n\n    presence.result.user = data;\n\n    if (!room.isConnected) {\n      return;\n    }\n\n    this._trySetPresence(roomId, data);\n    this._notifyPresenceSubs(roomId);\n  }\n\n  _trySetPresence(roomId, data) {\n    this._trySendAuthed(uuid(), {\n      op: \"set-presence\",\n      \"room-id\": roomId,\n      data,\n    });\n  }\n\n  _tryJoinRoom(roomId) {\n    this._trySendAuthed(uuid(), { op: \"join-room\", \"room-id\": roomId });\n    delete this._roomsPendingLeave[roomId];\n  }\n\n  _tryLeaveRoom(roomId) {\n    this._trySendAuthed(uuid(), { op: \"leave-room\", \"room-id\": roomId });\n  }\n\n  /**\n   * @template {keyof RoomSchema} RoomType\n   * @template {keyof RoomSchema[RoomType]['presence']} Keys\n   * @param {RoomType} roomType\n   * @param {string | number} roomId\n   * @param {import('./presence').PresenceOpts<RoomSchema[RoomType]['presence'], Keys>} opts\n   * @param {(slice: import('./presence').PresenceResponse<RoomSchema[RoomType]['presence'], Keys>) => void} cb\n   * @returns {() => void}\n   */\n  subscribePresence(roomType, roomId, opts, cb) {\n    const leaveRoom = this.joinRoom(roomId);\n\n    const handler = { ...opts, roomId, cb, prev: null };\n\n    this._presence[roomId] = this._presence[roomId] || {};\n    this._presence[roomId].handlers = this._presence[roomId].handlers || [];\n    this._presence[roomId].handlers.push(handler);\n\n    this._notifyPresenceSub(roomId, handler);\n\n    return () => {\n      this._presence[roomId].handlers =\n        this._presence[roomId]?.handlers?.filter((x) => x !== handler) ?? [];\n\n      leaveRoom();\n    };\n  }\n\n  _notifyPresenceSubs(roomId) {\n    this._presence[roomId]?.handlers?.forEach((handler) => {\n      this._notifyPresenceSub(roomId, handler);\n    });\n  }\n\n  _notifyPresenceSub(roomId, handler) {\n    const slice = this.getPresence(\"\", roomId, handler);\n\n    if (!slice) {\n      return;\n    }\n\n    if (handler.prev && !hasPresenceResponseChanged(slice, handler.prev)) {\n      return;\n    }\n\n    handler.prev = slice;\n    handler.cb(slice);\n  }\n\n  _setPresencePeers(roomId, data) {\n    const sessions = { ...data };\n    // no need to keep track of `user`\n    delete sessions[this._sessionId];\n    const peers = Object.fromEntries(\n      Object.entries(sessions).map(([k, v]) => [k, v.data]),\n    );\n\n    this._presence[roomId] = this._presence[roomId] || {};\n    this._presence[roomId].result = this._presence[roomId].result || {};\n    this._presence[roomId].result.peers = peers;\n  }\n\n  // --------\n  // Broadcast\n\n  publishTopic({ roomType, roomId, topic, data }) {\n    const room = this._rooms[roomId];\n\n    if (!room) {\n      return;\n    }\n\n    if (!room.isConnected) {\n      this._broadcastQueue[roomId] = this._broadcastQueue[roomId] ?? [];\n      this._broadcastQueue[roomId].push({ topic, roomType, data });\n\n      return;\n    }\n\n    this._tryBroadcast(roomId, roomType, topic, data);\n  }\n\n  _tryBroadcast(roomId, roomType, topic, data) {\n    this._trySendAuthed(uuid(), {\n      op: \"client-broadcast\",\n      \"room-id\": roomId,\n      roomType,\n      topic,\n      data,\n    });\n  }\n\n  subscribeTopic(roomId, topic, cb) {\n    const leaveRoom = this.joinRoom(roomId);\n\n    this._broadcastSubs[roomId] = this._broadcastSubs[roomId] || {};\n    this._broadcastSubs[roomId][topic] =\n      this._broadcastSubs[roomId][topic] || [];\n    this._broadcastSubs[roomId][topic].push(cb);\n    this._presence[roomId] = this._presence[roomId] || {};\n\n    return () => {\n      this._broadcastSubs[roomId][topic] = this._broadcastSubs[roomId][\n        topic\n      ].filter((x) => x !== cb);\n\n      if (!this._broadcastSubs[roomId][topic].length) {\n        delete this._broadcastSubs[roomId][topic];\n      }\n\n      leaveRoom();\n    };\n  }\n\n  _notifyBroadcastSubs(room, topic, msg) {\n    this._broadcastSubs?.[room]?.[topic]?.forEach((cb) => {\n      const data = msg.data?.data;\n\n      const peer =\n        msg.data[\"peer-id\"] === this._sessionId\n          ? this._presence[room]?.result?.user\n          : this._presence[room]?.result?.peers?.[msg.data[\"peer-id\"]];\n\n      return cb(data, peer);\n    });\n  }\n\n  // --------\n  // Storage\n\n  async upload(path, file) {\n    const currentUser = await this.getCurrentUser();\n    const refreshToken = currentUser?.user?.refresh_token;\n    const fileName = path || file.name;\n    const url = await StorageApi.getSignedUploadUrl({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      fileName: fileName,\n      refreshToken: refreshToken,\n    });\n    const isSuccess = await StorageApi.upload(url, file);\n\n    return isSuccess;\n  }\n\n  async getDownloadUrl(path) {\n    const currentUser = await this.getCurrentUser();\n    const refreshToken = currentUser?.user?.refresh_token;\n    const url = await StorageApi.getDownloadUrl({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      path: path,\n      refreshToken: refreshToken,\n    });\n\n    return url;\n  }\n\n  async deleteFile(path) {\n    const currentUser = await this.getCurrentUser();\n    const refreshToken = currentUser?.user?.refresh_token;\n    const result = await StorageApi.deleteFile({\n      apiURI: this.config.apiURI,\n      appId: this.config.appId,\n      path: path,\n      refreshToken: refreshToken,\n    });\n\n    return result;\n  }\n}\n"]}