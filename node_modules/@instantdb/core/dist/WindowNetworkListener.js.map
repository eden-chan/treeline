{"version":3,"file":"WindowNetworkListener.js","sourceRoot":"","sources":["../src/WindowNetworkListener.js"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAAqB,qBAAqB;IACxC,MAAM,CAAO,WAAW;;YACtB,OAAO,SAAS,CAAC,MAAM,CAAC;QAC1B,CAAC;KAAA;IACD,MAAM,CAAC,MAAM,CAAC,CAAC;QACb,MAAM,QAAQ,GAAG,GAAG,EAAE;YACpB,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,CAAC,CAAC;QACF,MAAM,SAAS,GAAG,GAAG,EAAE;YACrB,CAAC,CAAC,KAAK,CAAC,CAAC;QACX,CAAC,CAAC;QACF,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACrC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACvC,OAAO,GAAG,EAAE;YACV,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACxC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC5C,CAAC,CAAC;IACJ,CAAC;CACF;AAlBD,wCAkBC","sourcesContent":["export default class WindowNetworkListener {\n  static async getIsOnline() {\n    return navigator.onLine;\n  }\n  static listen(f) {\n    const onOnline = () => {\n      f(true);\n    };\n    const onOffline = () => {\n      f(false);\n    };\n    addEventListener(\"online\", onOnline);\n    addEventListener(\"offline\", onOffline);\n    return () => {\n      removeEventListener(\"online\", onOnline);\n      removeEventListener(\"offline\", onOffline);\n    };\n  }\n}\n"]}