{"version":3,"file":"instaml.js","sourceRoot":"","sources":["../src/instaml.js"],"names":[],"mappings":";;;;;AAKA,kCA4BC;AAED,sDAKC;AAED,8DAOC;AA2SD,8BAMC;AAlWD,uCAA0D;AAC1D,2CAAsD;AACtD,wDAAgC;AAEhC,wEAAwE;AACxE,SAAgB,WAAW,CAAC,WAAW,EAAE,MAAM;IAC7C,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,WAAW,CAAC;IAClD,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE,CAAC;QAC1B,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAEjC,IAAI,QAAQ,EAAE,CAAC;YACb,mBAAmB;YACnB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzE,8BAA8B;YAC9B,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;YAC1B,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAC1C,CAAC;aAAM,CAAC;YACN,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IACxB,IACE,CAAC,MAAM,KAAK,YAAY,IAAI,MAAM,KAAK,gBAAgB,CAAC;QACxD,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAC7B,CAAC;QACD,yDAAyD;QACzD,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5B,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACrB,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAgB,qBAAqB,CAAC,KAAK,EAAE,UAAU,EAAE,cAAc;IACrE,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QACxC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrD,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,cAAc,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,yBAAyB,CAAC,KAAK,EAAE,UAAU,EAAE,cAAc;IACzE,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ;YAAE,OAAO,KAAK,CAAC;QAC5B,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC;QACrC,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,cAAc,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAG;IAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB,OAAO,GAAG,CAAC;IACb,CAAC;IACD,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACpC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CACb,+DAA+D,CAChE,CAAC;IACJ,CAAC;IACD,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS;IAC/C,OAAO,CACL,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7B,sEAAsE;QACtE,qCAAqC;QACrC,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAChD,CAAC;AACJ,CAAC;AAED,SAAS,uBAAuB,CAAC,SAAS;IACxC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;QACxC,MAAM,IAAI,KAAK,CAAC,GAAG,SAAS,mCAAmC,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS;IAChD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;QAC/C,OAAO,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,OAAO,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;IAEnD,MAAM,OAAO,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC7D,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,CAAC,KAAK,KAAK,EAAE,CAAC;QAC/C,MAAM,IAAI,KAAK,CAAC,GAAG,SAAS,6CAA6C,CAAC,CAAC;IAC7E,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,4DAA4D;AAC5D,sCAAsC;AACtC,SAAS,eAAe,CAAC,GAAG;IAC1B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,IAAA,kBAAQ,EAAC,GAAG,CAAC,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,IAAA,kBAAQ,EAAC,GAAG,CAAC;QAC7C,CAAC,CAAC,IAAA,qBAAW,EAAC,GAAG,CAAC;QAClB,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG;IACtC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;IAExC,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;QACxB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,UAAU,CAAC;IACtC,MAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACxD,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CAAC,GAAG,SAAS,6BAA6B,CAAC,CAAC;IAC7D,CAAC;IACD,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC1B,CAAC;AAED,SAAS,UAAU,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;IAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,EAAE;QACpE,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAChE,MAAM,OAAO,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3D,MAAM,OAAO,GAAG,yBAAyB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACvB,MAAM,MAAM,GAAG,OAAO;gBACpB,CAAC,CAAC;oBACE,YAAY;oBACZ,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;oBACjC,OAAO,CAAC,EAAE;oBACV,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;iBAC3D;gBACH,CAAC,CAAC;oBACE,YAAY;oBACZ,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;oBAC1D,OAAO,CAAC,EAAE;oBACV,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;iBAClC,CAAC;YACN,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;IAC7C,MAAM,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,EAAE;QACxE,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAChE,MAAM,OAAO,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3D,MAAM,OAAO,GAAG,yBAAyB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACvB,MAAM,MAAM,GAAG,OAAO;gBACpB,CAAC,CAAC;oBACE,gBAAgB;oBAChB,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;oBACjC,OAAO,CAAC,EAAE;oBACV,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;iBAC3D;gBACH,CAAC,CAAC;oBACE,gBAAgB;oBAChB,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;oBAC1D,OAAO,CAAC,EAAE;oBACV,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;iBAClC,CAAC;YACN,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;IAC5C,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAChD,gEAAgE;IAChE,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;SAC1D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC3B,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;QAC1B,MAAM,IAAI,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QAC5D,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IACL,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,YAAY,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC;IACvC,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAChD,OAAO,CAAC,CAAC,eAAe,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,eAAe,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/C,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAChD,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;QAChE,MAAM,IAAI,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAA,6BAAoB,EAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAClE,OAAO,CAAC,mBAAmB,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG;QACd,YAAY;QACZ,MAAM;QACN,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE;QAC5C,MAAM;KACP,CAAC;IAEF,gEAAgE;IAChE,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACtC,CAAC;AAED,SAAS,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;IACzC,QAAQ,MAAM,EAAE,CAAC;QACf,KAAK,OAAO;YACV,OAAO,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACtC,KAAK,QAAQ;YACX,OAAO,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACnC,KAAK,MAAM;YACT,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,KAAK,QAAQ;YACX,OAAO,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACnC,KAAK,QAAQ;YACX,OAAO,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACnC;YACE,MAAM,IAAI,KAAK,CAAC,sBAAsB,MAAM,EAAE,CAAC,CAAC;IACpD,CAAC;AACH,CAAC;AAED,YAAY;AACZ,YAAY;AAEZ,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK;IAC3C,MAAM,MAAM,GAAG,IAAA,cAAI,GAAE,CAAC;IACtB,MAAM,UAAU,GAAG,IAAA,cAAI,GAAE,CAAC;IAC1B,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5C,uBACE,EAAE,EAAE,MAAM,EACV,kBAAkB,EAAE,QAAQ,EAC5B,YAAY,EAAE,MAAM,EACpB,WAAW,EAAE,KAAK,EAClB,SAAS,EAAE,KAAK,EAChB,QAAQ,EAAE,KAAK,EACf,UAAU,EAAE,IAAI,IACb,CAAC,KAAK,IAAI,EAAE,CAAC,EAChB;AACJ,CAAC;AAED,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK;IACxC,MAAM,MAAM,GAAG,IAAA,cAAI,GAAE,CAAC;IACtB,MAAM,UAAU,GAAG,IAAA,cAAI,GAAE,CAAC;IAC1B,MAAM,UAAU,GAAG,IAAA,cAAI,GAAE,CAAC;IAC1B,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5C,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5C,uBACE,EAAE,EAAE,MAAM,EACV,kBAAkB,EAAE,QAAQ,EAC5B,kBAAkB,EAAE,QAAQ,EAC5B,YAAY,EAAE,KAAK,EACnB,WAAW,EAAE,MAAM,EACnB,SAAS,EAAE,KAAK,EAChB,QAAQ,EAAE,KAAK,EACf,UAAU,EAAE,IAAI,IACb,CAAC,KAAK,IAAI,EAAE,CAAC,EAChB;AACJ,CAAC;AAED,+CAA+C;AAC/C,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AACnE,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAChD,MAAM,cAAc,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACpD,MAAM,uBAAuB,GAAG,IAAI,GAAG,CAAC;IACtC,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,QAAQ;CACT,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AACxD,MAAM,cAAc,mCAAQ,WAAW,KAAE,WAAW,EAAE,KAAK,GAAE,CAAC;AAE9D,SAAS,kBAAkB,CAAC,aAAa,EAAE,GAAG;IAC5C,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,oBAAO,aAAa,GAAI,EAAE,CAAC,CAAC;IACxE,SAAS,OAAO,CAAC,IAAI;QACnB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;QAChC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IACD,SAAS,WAAW,CAAC,IAAI;QACvB,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YAChC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;IAED,yCAAyC;IACzC,kEAAkE;IAClE,sBAAsB;IACtB,KAAK,MAAM,EAAE,IAAI,GAAG,EAAE,CAAC;QACrB,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;QACrC,IAAI,uBAAuB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,UAAU,EAAE,CAAC;gBACf,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;oBAC9C,MAAM,KAAK,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;oBACjD,MAAM,OAAO,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC3D,MAAM,OAAO,GAAG,yBAAyB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC/D,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;wBACzB,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;oBACvD,CAAC;oBACD,WAAW,CAAC,OAAO,CAAC,CAAC;oBACrB,WAAW,CAAC,OAAO,CAAC,CAAC;gBACvB,CAAC;qBAAM,CAAC;oBACN,MAAM,IAAI,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;oBAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;wBACV,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;oBAC3D,CAAC;oBACD,WAAW,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,8BAA8B;IAC9B,KAAK,MAAM,EAAE,IAAI,GAAG,EAAE,CAAC;QACrB,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;QACrC,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;gBAC3B,MAAM,OAAO,GAAG,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC3D,WAAW,CAAC,OAAO,CAAC,CAAC;gBACrB,IAAI,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;oBAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;gBACD,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;oBAC5B,MAAM,OAAO,GAAG,yBAAyB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC/D,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;wBACzB,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBACvC,CAAC;oBACD,WAAW,CAAC,OAAO,CAAC,CAAC;gBACvB,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACzB,CAAC;AAED,SAAgB,SAAS,CAAC,KAAK,EAAE,WAAW;IAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IACxE,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,IAAA,gBAAM,EAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,GAAG,kBAAkB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAClE,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7D,OAAO,CAAC,GAAG,cAAc,EAAE,GAAG,OAAO,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import { getOps, isLookup, parseLookup } from \"./instatx\";\nimport { immutableDeepReplace } from \"./utils/object\";\nimport uuid from \"./utils/uuid\";\n\n// Rewrites optimistic attrs with the attrs we get back from the server.\nexport function rewriteStep(attrMapping, txStep) {\n  const { attrIdMap, refSwapAttrIds } = attrMapping;\n  const rewritten = [];\n  for (const part of txStep) {\n    const newValue = attrIdMap[part];\n\n    if (newValue) {\n      // Rewrites attr id\n      rewritten.push(newValue);\n    } else if (Array.isArray(part) && part.length == 2 && attrIdMap[part[0]]) {\n      // Rewrites attr id in lookups\n      const [aid, value] = part;\n      rewritten.push([attrIdMap[aid], value]);\n    } else {\n      rewritten.push(part);\n    }\n  }\n  const [action] = txStep;\n  if (\n    (action === \"add-triple\" || action === \"retract-triple\") &&\n    refSwapAttrIds.has(txStep[2])\n  ) {\n    // Reverse links if the optimistic link attr is backwards\n    const tmp = rewritten[1];\n    rewritten[1] = rewritten[3];\n    rewritten[3] = tmp;\n  }\n  return rewritten;\n}\n\nexport function getAttrByFwdIdentName(attrs, inputEtype, inputIdentName) {\n  return Object.values(attrs).find((attr) => {\n    const [_id, etype, label] = attr[\"forward-identity\"];\n    return etype === inputEtype && label === inputIdentName;\n  });\n}\n\nexport function getAttrByReverseIdentName(attrs, inputEtype, inputIdentName) {\n  return Object.values(attrs).find((attr) => {\n    const revIdent = attr[\"reverse-identity\"];\n    if (!revIdent) return false;\n    const [_id, etype, label] = revIdent;\n    return etype === inputEtype && label === inputIdentName;\n  });\n}\n\nfunction explodeLookupRef(eid) {\n  if (Array.isArray(eid)) {\n    return eid;\n  }\n  const entries = Object.entries(eid);\n  if (entries.length !== 1) {\n    throw new Error(\n      \"lookup must be an object with a single unique attr and value.\",\n    );\n  }\n  return entries[0];\n}\n\nfunction isRefLookupIdent(attrs, etype, identName) {\n  return (\n    identName.indexOf(\".\") !== -1 &&\n    // attr names can have `.` in them, so use the attr we find with a `.`\n    // before assuming it's a ref lookup.\n    !getAttrByFwdIdentName(attrs, etype, identName)\n  );\n}\n\nfunction extractRefLookupFwdName(identName) {\n  const [fwdName, idIdent, ...rest] = identName.split(\".\");\n  if (rest.length > 0 || idIdent !== \"id\") {\n    throw new Error(`${identName} is not a valid lookup attribute.`);\n  }\n\n  return fwdName;\n}\n\nfunction lookupIdentToAttr(attrs, etype, identName) {\n  if (!isRefLookupIdent(attrs, etype, identName)) {\n    return getAttrByFwdIdentName(attrs, etype, identName);\n  }\n\n  const fwdName = extractRefLookupFwdName(identName);\n\n  const refAttr = getAttrByFwdIdentName(attrs, etype, fwdName);\n  if (refAttr && refAttr[\"value-type\"] !== \"ref\") {\n    throw new Error(`${identName} does not reference a valid link attribute.`);\n  }\n  return refAttr;\n}\n\n// Returns [attr, value] for the eid if the eid is a lookup.\n// If it's a regular eid, returns null\nfunction lookupPairOfEid(eid) {\n  if (typeof eid === \"string\" && !isLookup(eid)) {\n    return null;\n  }\n  return typeof eid === \"string\" && isLookup(eid)\n    ? parseLookup(eid)\n    : explodeLookupRef(eid);\n}\n\nfunction extractLookup(attrs, etype, eid) {\n  const lookupPair = lookupPairOfEid(eid);\n\n  if (lookupPair === null) {\n    return eid;\n  }\n\n  const [identName, value] = lookupPair;\n  const attr = lookupIdentToAttr(attrs, etype, identName);\n  if (!attr || !attr[\"unique?\"]) {\n    throw new Error(`${identName} is not a unique attribute.`);\n  }\n  return [attr.id, value];\n}\n\nfunction expandLink(attrs, [etype, eidA, obj]) {\n  const addTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n    const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n    const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n    const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n    return eids.map((eidB) => {\n      const txStep = fwdAttr\n        ? [\n            \"add-triple\",\n            extractLookup(attrs, etype, eidA),\n            fwdAttr.id,\n            extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n          ]\n        : [\n            \"add-triple\",\n            extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n            revAttr.id,\n            extractLookup(attrs, etype, eidA),\n          ];\n      return txStep;\n    });\n  });\n  return addTriples;\n}\n\nfunction expandUnlink(attrs, [etype, eidA, obj]) {\n  const retractTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n    const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n    const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n    const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n    return eids.map((eidB) => {\n      const txStep = fwdAttr\n        ? [\n            \"retract-triple\",\n            extractLookup(attrs, etype, eidA),\n            fwdAttr.id,\n            extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n          ]\n        : [\n            \"retract-triple\",\n            extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n            revAttr.id,\n            extractLookup(attrs, etype, eidA),\n          ];\n      return txStep;\n    });\n  });\n  return retractTriples;\n}\n\nfunction expandUpdate(attrs, [etype, eid, obj]) {\n  const lookup = extractLookup(attrs, etype, eid);\n  // id first so that we don't clobber updates on the lookup field\n  const attrTuples = [[\"id\", extractLookup(attrs, etype, eid)]]\n    .concat(Object.entries(obj))\n    .map(([identName, value]) => {\n      const attr = getAttrByFwdIdentName(attrs, etype, identName);\n      return [\"add-triple\", lookup, attr.id, value];\n    });\n  return attrTuples;\n}\n\nfunction expandDelete(attrs, [etype, eid]) {\n  const lookup = extractLookup(attrs, etype, eid);\n  return [[\"delete-entity\", lookup, etype]];\n}\n\nfunction expandDeepMerge(attrs, [etype, eid, obj]) {\n  const lookup = extractLookup(attrs, etype, eid);\n  const attrTuples = Object.entries(obj).map(([identName, value]) => {\n    const attr = getAttrByFwdIdentName(attrs, etype, identName);\n    const coercedValue = immutableDeepReplace(value, undefined, null);\n    return [\"deep-merge-triple\", lookup, attr.id, coercedValue];\n  });\n\n  const idTuple = [\n    \"add-triple\",\n    lookup,\n    getAttrByFwdIdentName(attrs, etype, \"id\").id,\n    lookup,\n  ];\n\n  // id first so that we don't clobber updates on the lookup field\n  return [idTuple].concat(attrTuples);\n}\n\nfunction toTxSteps(attrs, [action, ...args]) {\n  switch (action) {\n    case \"merge\":\n      return expandDeepMerge(attrs, args);\n    case \"update\":\n      return expandUpdate(attrs, args);\n    case \"link\":\n      return expandLink(attrs, args);\n    case \"unlink\":\n      return expandUnlink(attrs, args);\n    case \"delete\":\n      return expandDelete(attrs, args);\n    default:\n      throw new Error(`unsupported action ${action}`);\n  }\n}\n\n// ---------\n// transform\n\nfunction createObjectAttr(etype, label, props) {\n  const attrId = uuid();\n  const fwdIdentId = uuid();\n  const fwdIdent = [fwdIdentId, etype, label];\n  return {\n    id: attrId,\n    \"forward-identity\": fwdIdent,\n    \"value-type\": \"blob\",\n    cardinality: \"one\",\n    \"unique?\": false,\n    \"index?\": false,\n    isUnsynced: true,\n    ...(props || {}),\n  };\n}\n\nfunction createRefAttr(etype, label, props) {\n  const attrId = uuid();\n  const fwdIdentId = uuid();\n  const revIdentId = uuid();\n  const fwdIdent = [fwdIdentId, etype, label];\n  const revIdent = [revIdentId, label, etype];\n  return {\n    id: attrId,\n    \"forward-identity\": fwdIdent,\n    \"reverse-identity\": revIdent,\n    \"value-type\": \"ref\",\n    cardinality: \"many\",\n    \"unique?\": false,\n    \"index?\": false,\n    isUnsynced: true,\n    ...(props || {}),\n  };\n}\n\n// Actions that have an object, e.g. not delete\nconst OBJ_ACTIONS = new Set([\"update\", \"merge\", \"link\", \"unlink\"]);\nconst REF_ACTIONS = new Set([\"link\", \"unlink\"]);\nconst UPDATE_ACTIONS = new Set([\"update\", \"merge\"]);\nconst SUPPORTS_LOOKUP_ACTIONS = new Set([\n  \"link\",\n  \"unlink\",\n  \"update\",\n  \"merge\",\n  \"delete\",\n]);\n\nconst lookupProps = { \"unique?\": true, \"index?\": true };\nconst refLookupProps = { ...lookupProps, cardinality: \"one\" };\n\nfunction createMissingAttrs(existingAttrs, ops) {\n  const [addedIds, attrs, addOps] = [new Set(), { ...existingAttrs }, []];\n  function addAttr(attr) {\n    attrs[attr.id] = attr;\n    addOps.push([\"add-attr\", attr]);\n    addedIds.add(attr.id);\n  }\n  function addUnsynced(attr) {\n    if (attr?.isUnsynced && !addedIds.has(attr.id)) {\n      addOps.push([\"add-attr\", attr]);\n      addedIds.add(attr.id);\n    }\n  }\n\n  // Create attrs for lookups if we need to\n  // Do these first because otherwise we might add a non-unique attr\n  // before we get to it\n  for (const op of ops) {\n    const [action, etype, eid, obj] = op;\n    if (SUPPORTS_LOOKUP_ACTIONS.has(action)) {\n      const lookupPair = lookupPairOfEid(eid);\n      if (lookupPair) {\n        const identName = lookupPair[0];\n        if (isRefLookupIdent(attrs, etype, identName)) {\n          const label = extractRefLookupFwdName(identName);\n          const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n          const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n          if (!fwdAttr && !revAttr) {\n            addAttr(createRefAttr(etype, label, refLookupProps));\n          }\n          addUnsynced(fwdAttr);\n          addUnsynced(revAttr);\n        } else {\n          const attr = getAttrByFwdIdentName(attrs, etype, identName);\n          if (!attr) {\n            addAttr(createObjectAttr(etype, identName, lookupProps));\n          }\n          addUnsynced(attr);\n        }\n      }\n    }\n  }\n\n  // Create object and ref attrs\n  for (const op of ops) {\n    const [action, etype, eid, obj] = op;\n    if (OBJ_ACTIONS.has(action)) {\n      const labels = Object.keys(obj);\n      labels.push(\"id\");\n      for (const label of labels) {\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        addUnsynced(fwdAttr);\n        if (UPDATE_ACTIONS.has(action)) {\n          if (!fwdAttr) {\n            addAttr(createObjectAttr(etype, label));\n          }\n        }\n        if (REF_ACTIONS.has(action)) {\n          const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n          if (!fwdAttr && !revAttr) {\n            addAttr(createRefAttr(etype, label));\n          }\n          addUnsynced(revAttr);\n        }\n      }\n    }\n  }\n  return [attrs, addOps];\n}\n\nexport function transform(attrs, inputChunks) {\n  const chunks = Array.isArray(inputChunks) ? inputChunks : [inputChunks];\n  const ops = chunks.flatMap((tx) => getOps(tx));\n  const [newAttrs, addAttrTxSteps] = createMissingAttrs(attrs, ops);\n  const txSteps = ops.flatMap((op) => toTxSteps(newAttrs, op));\n  return [...addAttrTxSteps, ...txSteps];\n}\n"]}