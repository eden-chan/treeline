export class PersistedObject {
    constructor(persister: any, key: any, defaultValue: any, onMerge: any, toJSON?: (x: any) => string, fromJSON?: (x: any) => any, saveThrottleMs?: number);
    _persister: any;
    _key: any;
    _onMerge: any;
    _loadedCbs: any[];
    _isLoading: boolean;
    currentValue: any;
    toJSON: (x: any) => string;
    fromJSON: (x: any) => any;
    _saveThrottleMs: number;
    _pendingSaveCbs: any[];
    _version: number;
    _load(): Promise<void>;
    waitForLoaded(): Promise<void>;
    isLoading(): boolean;
    version(): number;
    waitForSync(): Promise<void>;
    _writeToStorage(): void;
    flush(): Promise<void>;
    _enqueuePersist(cb: any): void;
    _nextSave: any;
    set(f: any, cb: any): void;
}
//# sourceMappingURL=PersistedObject.d.ts.map