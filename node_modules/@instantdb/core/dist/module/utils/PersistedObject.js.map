{"version":3,"file":"PersistedObject.js","sourceRoot":"","sources":["../../../src/utils/PersistedObject.js"],"names":[],"mappings":"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","sourcesContent":["// PersistedObjects save data outside of memory.\n//\n// When we load a persisted object, it's possible we call `set`\n// before we finish loading. To address we handle set in two ways:\n//\n// 1. Before load\n// We simply update currentValue in memory\n//\n// 2. After load\n// We update currentValue in memory and in storage\n//\n// Each PersistedObject provides it's own `onMerge`\n// function to handle the merge of data from storage and memory\n// on load\nexport class PersistedObject {\n  constructor(\n    persister,\n    key,\n    defaultValue,\n    onMerge,\n    toJSON = (x) => {\n      return JSON.stringify(x);\n    },\n    fromJSON = (x) => {\n      return JSON.parse(x);\n    },\n    saveThrottleMs = 100,\n  ) {\n    this._persister = persister;\n    this._key = key;\n\n    this._onMerge = onMerge;\n\n    this._loadedCbs = [];\n    this._isLoading = true;\n    this.currentValue = defaultValue;\n    this.toJSON = toJSON;\n    this.fromJSON = fromJSON;\n    this._saveThrottleMs = saveThrottleMs;\n    this._pendingSaveCbs = [];\n    this._version = 0; \n\n    this._load();\n  }\n\n  async _load() {\n    const fromStorage = this.fromJSON(await this._persister.getItem(this._key));\n    this._isLoading = false;\n\n    this._onMerge(fromStorage, this.currentValue);\n    for (const cb of this._loadedCbs) {\n      cb();\n    }\n  }\n\n  async waitForLoaded() {\n    if (!this._isLoading) {\n      return;\n    }\n    const loadedPromise = new Promise((resolve) => {\n      this._loadedCbs.push(resolve);\n    });\n    await loadedPromise;\n  }\n\n  isLoading() {\n    return this._isLoading;\n  }\n  \n  version() { \n    return this._version;\n  }\n\n  async waitForSync() {\n    if (!this._nextSave) {\n      return;\n    }\n    const syncedPromise = new Promise((resolve) => {\n      this._pendingSaveCbs.push(resolve);\n    });\n    await syncedPromise;\n  }\n\n  _writeToStorage() {\n    this._persister.setItem(this._key, this.toJSON(this.currentValue));\n    for (const cb of this._pendingSaveCbs) {\n      cb();\n    }\n    this._pendingSaveCbs.length = 0;\n  }\n\n  async flush() {\n    if (!this._nextSave) {\n      return;\n    }\n    clearTimeout(this._nextSave);\n    this._writeToStorage();\n  }\n\n  _enqueuePersist(cb) {\n    if (this._nextSave) {\n      if (cb) {\n        this._pendingSaveCbs.push(cb);\n      }\n      return;\n    }\n    this._nextSave = setTimeout(() => {\n      this._nextSave = null;\n      this._writeToStorage();\n    }, this._saveThrottleMs);\n  }\n\n  set(f, cb) {\n    this._version++;\n    this.currentValue = f(this.currentValue);\n    if (this._isLoading) {\n      this._loadedCbs.push(() => this._enqueuePersist(cb));\n    } else {\n      this._enqueuePersist(cb);\n    }\n  }\n}\n"]}