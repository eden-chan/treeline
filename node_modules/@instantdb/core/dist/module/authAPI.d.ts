export function sendMagicCode({ apiURI, appId, email }: {
    apiURI: any;
    appId: any;
    email: any;
}): Promise<any>;
export function verifyMagicCode({ apiURI, appId, email, code }: {
    apiURI: any;
    appId: any;
    email: any;
    code: any;
}): Promise<any>;
export function verifyRefreshToken({ apiURI, appId, refreshToken }: {
    apiURI: any;
    appId: any;
    refreshToken: any;
}): Promise<any>;
/**
 * @param {Object} params
 * @param {string} params.apiURI
 * @param {string} params.appId
 * @param {string} params.code
 * @param {string | null | undefined} [params.codeVerifier]
 */
export function exchangeCodeForToken({ apiURI, appId, code, codeVerifier, }: {
    apiURI: string;
    appId: string;
    code: string;
    codeVerifier?: string | null | undefined;
}): Promise<any>;
/**
 * @param {Object} params
 * @param {string} params.apiURI
 * @param {string} params.appId
 * @param {string} params.clientName
 * @param {string} params.idToken
 * @param {string | null | undefined} [params.refreshToken]
 * @param {string | null | undefined} [params.nonce]
 */
export function signInWithIdToken({ apiURI, appId, nonce, idToken, clientName, refreshToken, }: {
    apiURI: string;
    appId: string;
    clientName: string;
    idToken: string;
    refreshToken?: string | null | undefined;
    nonce?: string | null | undefined;
}): Promise<any>;
/**
 * @param {Object} params
 * @param {string} params.apiURI
 * @param {string} params.appId
 * @param {string} params.refreshToken
 */
export function signOut({ apiURI, appId, refreshToken }: {
    apiURI: string;
    appId: string;
    refreshToken: string;
}): Promise<any>;
//# sourceMappingURL=authAPI.d.ts.map