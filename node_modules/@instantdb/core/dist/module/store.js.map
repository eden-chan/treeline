{"version":3,"file":"store.js","sourceRoot":"","sources":["../../src/store.js"],"names":[],"mappings":"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","sourcesContent":["import { create } from \"mutative\";\nimport { immutableDeepMerge } from \"./utils/object\";\n\nfunction hasEA(attr) {\n  return attr[\"cardinality\"] === \"one\";\n}\n\nfunction isRef(attr) {\n  return attr[\"value-type\"] === \"ref\";\n}\n\nfunction isBlob(attr) {\n  return attr[\"value-type\"] === \"blob\";\n}\n\nfunction getAttr(attrs, attrId) {\n  return attrs[attrId];\n}\n\nfunction getInMap(obj, path) {\n  return path.reduce((acc, key) => acc && acc.get(key), obj);\n}\n\nfunction deleteInMap(m, path) {\n  if (path.length === 0) throw new Error(\"path must have at least one element\");\n  if (path.length === 1) {\n    m.delete(path[0]);\n    return;\n  }\n  const [head, ...tail] = path;\n  if (!m.has(head)) return;\n  deleteInMap(m.get(head), tail);\n}\n\nfunction setInMap(m, path, value) {\n  if (path.length === 0) throw new Error(\"path must have at least one element\");\n  if (path.length === 1) {\n    m.set(path[0], value);\n    return;\n  }\n  const [head, ...tail] = path;\n  let nextM = m.get(head);\n  if (!nextM) {\n    nextM = new Map();\n    m.set(head, nextM);\n  }\n  setInMap(nextM, tail, value);\n}\n\nfunction createIndexMap(attrs, triples) {\n  const eav = new Map();\n  const aev = new Map();\n  const vae = new Map();\n  for (const triple of triples) {\n    const [eid, aid, v, t] = triple;\n    const attr = getAttr(attrs, aid);\n    if (!attr) {\n      console.warn(\"no such attr\", eid, attrs);\n      continue;\n    }\n\n    if (isRef(attr)) {\n      setInMap(vae, [v, aid, eid], triple);\n    }\n\n    setInMap(eav, [eid, aid, v], triple);\n    setInMap(aev, [aid, eid, v], triple);\n  }\n  return { eav, aev, vae };\n}\n\nexport function blobAttrs({ attrs }, etype) {\n  return Object.values(attrs)\n    .filter((attr) => isBlob(attr) && attr['forward-identity'][1] === etype);\n}\n\nexport function getAsObject(store, attrs, e) {\n  const obj = {}; \n  for (const attr of attrs) { \n    const aMap = store.eav.get(e)?.get(attr.id);\n    const vs = allMapValues(aMap, 1);\n    for (const v of vs) {  \n      obj[attr['forward-identity'][2]] = v[2];\n    }\n  }\n  return obj;\n}\n\nexport function toJSON(store) {\n  return {\n    __type: store.__type,\n    attrs: store.attrs,\n    triples: allMapValues(store.eav, 3),\n    cardinalityInference: store.cardinalityInference,\n    linkIndex: store.linkIndex,\n  };\n}\n\nexport function fromJSON(storeJSON) {\n  return createStore(\n    storeJSON.attrs,\n    storeJSON.triples,\n    storeJSON.cardinalityInference,\n    storeJSON.linkIndex,\n  );\n}\n\nexport function createStore(\n  attrs,\n  triples,\n  enableCardinalityInference,\n  linkIndex,\n) {\n  const store = createIndexMap(attrs, triples);\n  store.attrs = attrs;\n  store.cardinalityInference = enableCardinalityInference;\n  store.linkIndex = linkIndex;\n  store.__type = \"store\";\n\n  return store;\n}\n\n// We may have local triples with lookup refs in them,\n// we need to convert those lookup refs to eids to insert them\n// into the store. If we can't find the lookup ref locally,\n// then we drop the triple and have to wait for the server response\n// to see the optimistic updates.\nfunction resolveLookupRefs(store, triple) {\n  let eid;\n\n  // Check if `e` is a lookup ref\n  if (Array.isArray(triple[0])) {\n    const [a, v] = triple[0];\n    const eMaps = store.aev.get(a);\n    if (!eMaps) {\n      // We don't have the attr, so don't try to add the\n      // triple to the store\n      return null;\n    }\n    // This would be a lot more efficient with a ave index\n    const triples = allMapValues(eMaps, 2);\n    eid = triples.find((x) => x[2] === v)?.[0];\n  } else {\n    eid = triple[0];\n  }\n\n  if (!eid) {\n    // We don't know the eid that the ref refers to, so\n    // we can't add the triple to the store.\n    return null;\n  }\n\n  // Check if v is a lookup ref\n  const lookupV = triple[2];\n  if (\n    Array.isArray(lookupV) &&\n    lookupV.length === 2 &&\n    store.aev.get(lookupV[0])\n  ) {\n    const [a, v] = lookupV;\n    const eMaps = store.aev.get(a);\n    if (!eMaps) {\n      // We don't have the attr, so don't try to add the\n      // triple to the store\n      return null;\n    }\n    const triples = allMapValues(eMaps, 2);\n    const value = triples.find((x) => x[2] === v)?.[0];\n    if (!value) {\n      return null;\n    }\n    const [_e, aid, _v, ...rest] = triple;\n    return [eid, aid, value, ...rest];\n  } else {\n    const [_, ...rest] = triple;\n    return [eid, ...rest];\n  }\n}\n\nfunction retractTriple(store, rawTriple) {\n  const triple = resolveLookupRefs(store, rawTriple);\n  if (!triple) {\n    return;\n  }\n  const [eid, aid, v] = triple;\n  const attr = getAttr(store.attrs, aid);\n  if (!attr) {\n    return;\n  }\n\n  deleteInMap(store.eav, [eid, aid, v]);\n  deleteInMap(store.aev, [aid, eid, v]);\n  if (isRef(attr)) {\n    deleteInMap(store.vae, [v, aid, eid]);\n  }\n}\n\nlet _seed = 0;\nfunction getCreatedAt(store, attr, triple) {\n  const [eid, aid, v] = triple;\n  let createdAt;\n  const t = getInMap(store.ea, [eid, aid, v]);\n  if (t) {\n    createdAt = t[3];\n  }\n\n  /**\n   * (XXX)\n   * Two hacks here, for generating a `createdAt`\n   *\n   * 1. We multiply Date.now() by 10, to make sure that\n   *  `createdAt` is always greater than anything the server\n   *   could return\n   *\n   *   We do this because right now we know we _only_ insert\n   *   triples as optimistic updates.\n   *\n   * 2. We increment by `_seed`, to make sure there are no\n   *    two triples with the same `createdAt`. This is\n   *    done to make tests more predictable.\n   *\n   * We may need to rethink this. Because we * 10, we can't\n   * use this value as an _actual_ `createdAt` timestamp.\n   * Eventually we may want too though; For example, we could\n   * use `createdAt` for each triple, to infer a `createdAt` and\n   * `updatedAt` value for each object.\n   */\n  return createdAt || Date.now() * 10 + _seed++;\n}\n\nfunction addTriple(store, rawTriple) {\n  const triple = resolveLookupRefs(store, rawTriple);\n  if (!triple) {\n    return;\n  }\n  const [eid, aid, v] = triple;\n  const attr = getAttr(store.attrs, aid);\n  if (!attr) {\n    // (XXX): Due to the way we're handling attrs, it's\n    // possible to enter a state where we receive a triple without an attr.\n    // See: https://github.com/jsventures/instant-local/pull/132 for details.\n    // For now, if we receive a command without an attr, we no-op.\n    return;\n  }\n\n  const existingTriple = getInMap(store.eav, [eid, aid, v]);\n  // Reuse the created_at for a triple if it's already in the store.\n  // Prevents updates from temporarily pushing an entity to the top\n  // while waiting for the server response.\n  const t = existingTriple?.[3] ?? getCreatedAt(store, attr, triple);\n  const enhancedTriple = [eid, aid, v, t];\n\n  if (hasEA(attr)) {\n    setInMap(store.eav, [eid, aid], new Map([[v, enhancedTriple]]));\n    setInMap(store.aev, [aid, eid], new Map([[v, enhancedTriple]]));\n  } else {\n    setInMap(store.eav, [eid, aid, v], enhancedTriple);\n    setInMap(store.aev, [aid, eid, v], enhancedTriple);\n  }\n\n  if (isRef(attr)) {\n    setInMap(store.vae, [v, aid, eid], enhancedTriple);\n  }\n}\n\nfunction mergeTriple(store, rawTriple) {\n  const triple = resolveLookupRefs(store, rawTriple);\n  if (!triple) {\n    return;\n  }\n\n  const [eid, aid, update] = triple;\n  const attr = getAttr(store.attrs, aid);\n\n  if (!attr) return;\n\n  if (!isBlob(attr))\n    throw new Error(\"merge operation is not supported for links\");\n\n  const eavValuesMap = getInMap(store.eav, [eid, aid]);\n  if (!eavValuesMap) return;\n\n  const currentTriple = eavValuesMap.values().next()?.value;\n  if (!currentTriple) return;\n\n  const currentValue = currentTriple[2];\n  const updatedValue = immutableDeepMerge(currentValue, update);\n  const enhancedTriple = [\n    eid,\n    aid,\n    updatedValue,\n    getCreatedAt(store, attr, currentTriple),\n  ];\n\n  setInMap(store.eav, [eid, aid], new Map([[updatedValue, enhancedTriple]]));\n}\n\nfunction deleteEntity(store, args) {\n  const [lookup, etype] = args;\n  const triple = resolveLookupRefs(store, [lookup]);\n\n  if (!triple) {\n    return;\n  }\n  const [id] = triple;\n\n  // delete forward links and attributes + cardinality one links\n  const eMap = store.eav.get(id);\n  if (eMap) {\n    for (const a of eMap.keys()) {\n      const attr = store.attrs[a];\n      if (\n        // Fall back to deleting everything if we've rehydrated tx-steps from\n        // the store that didn't set `etype` in deleteEntity\n        !etype ||\n        // If we don't know about the attr, let's just get rid of it\n        !attr ||\n        // Make sure it matches the etype\n        attr[\"forward-identity\"]?.[1] === etype\n      ) {\n        deleteInMap(store.aev, [a, id]);\n        deleteInMap(store.eav, [id, a]);\n      }\n    }\n    // Clear out the eav index for `id` if we deleted all of the attributes\n    if (eMap.size === 0) {\n      deleteInMap(store.eav, [id]);\n    }\n  }\n\n  // delete reverse links\n  const vaeTriples = store.vae.get(id) && allMapValues(store.vae.get(id), 2);\n\n  if (vaeTriples) {\n    vaeTriples.forEach((triple) => {\n      const [e, a, v] = triple;\n      const attr = store.attrs[a];\n      if (!etype || !attr || attr[\"reverse-identity\"]?.[1] === etype) {\n        deleteInMap(store.eav, [e, a, v]);\n        deleteInMap(store.aev, [a, e, v]);\n        deleteInMap(store.vae, [v, a, e]);\n      }\n    });\n  }\n  // Clear out vae index for `id` if we deleted all the reverse attributes\n  if (store.vae.get(id)?.size === 0) {\n    deleteInMap(store.vae, [id]);\n  }\n}\n\n// (XXX): Whenever we change/delete attrs,\n// We indiscriminately reset the index map.\n// There are lots of opportunities for optimization:\n// * We _only_ need to run this indexes change. We could detect that\n// * We could batch this reset at the end\n// * We could add an ave index for all triples, so removing the\n//   right triples is easy and fast.\nfunction resetIndexMap(store, newTriples) {\n  const newIndexMap = createIndexMap(store.attrs, newTriples);\n  Object.keys(newIndexMap).forEach((key) => {\n    store[key] = newIndexMap[key];\n  });\n}\n\nfunction addAttr(store, [attr]) {\n  store.attrs[attr.id] = attr;\n}\n\nfunction getAllTriples(store) {\n  return allMapValues(store.eav, 3);\n}\n\nfunction deleteAttr(store, [id]) {\n  if (!store.attrs[id]) return;\n  const newTriples = getAllTriples(store).filter(([_, aid]) => aid !== id);\n  delete store.attrs[id];\n  resetIndexMap(store, newTriples);\n}\n\nfunction updateAttr(store, [partialAttr]) {\n  const attr = store.attrs[partialAttr.id];\n  if (!attr) return;\n  store.attrs[partialAttr.id] = { ...attr, ...partialAttr };\n  resetIndexMap(store, getAllTriples(store));\n}\n\nfunction applyTxStep(store, txStep) {\n  const [action, ...args] = txStep;\n  switch (action) {\n    case \"add-triple\":\n      addTriple(store, args);\n      break;\n    case \"deep-merge-triple\":\n      mergeTriple(store, args);\n      break;\n    case \"retract-triple\":\n      retractTriple(store, args);\n      break;\n    case \"delete-entity\":\n      deleteEntity(store, args);\n      break;\n    case \"add-attr\":\n      addAttr(store, args);\n      break;\n    case \"delete-attr\":\n      deleteAttr(store, args);\n      break;\n    case \"update-attr\":\n      updateAttr(store, args);\n      break;\n    default:\n      throw new Error(`unhandled transaction action: ${action}`);\n  }\n}\n\nexport function allMapValues(m, level, res = []) {\n  if (!m) {\n    return res;\n  }\n  if (level === 0) {\n    return res;\n  }\n  if (level === 1) {\n    for (const v of m.values()) {\n      res.push(v);\n    }\n    return res;\n  }\n  for (const v of m.values()) {\n    allMapValues(v, level - 1, res);\n  }\n\n  return res;\n}\n\nfunction triplesByValue(m, v) {\n  const res = [];\n  const values = v.in ? v.in : [v];\n\n  for (const value of values) {\n    const triple = m.get(value);\n    if (triple) {\n      res.push(triple);\n    }\n  }\n  return res;\n}\n\n// A poor man's pattern matching\n// Returns either eav, ea, ev, av, v, or ''\nfunction whichIdx(e, a, v) {\n  let res = \"\";\n  if (e !== undefined) {\n    res += \"e\";\n  }\n  if (a !== undefined) {\n    res += \"a\";\n  }\n  if (v !== undefined) {\n    res += \"v\";\n  }\n  return res;\n}\n\nexport function getTriples(store, [e, a, v]) {\n  const idx = whichIdx(e, a, v);\n  switch (idx) {\n    case \"e\": {\n      const eMap = store.eav.get(e);\n      return allMapValues(eMap, 2);\n    }\n    case \"ea\": {\n      const aMap = store.eav.get(e)?.get(a);\n      return allMapValues(aMap, 1);\n    }\n    case \"eav\": {\n      const aMap = store.eav.get(e)?.get(a);\n      if (!aMap) {\n        return [];\n      }\n      return triplesByValue(aMap, v);\n    }\n    case \"ev\": {\n      const eMap = store.eav.get(e);\n      if (!eMap) {\n        return [];\n      }\n      const res = [];\n      for (const aMap of eMap.values()) {\n        res.push(...triplesByValue(aMap, v));\n      }\n      return res;\n    }\n    case \"a\": {\n      const aMap = store.aev.get(a)\n      return allMapValues(aMap, 2);\n    }\n    case \"av\": {\n      const aMap = store.aev.get(a);\n      if (!aMap) {\n        return [];\n      }\n      const res = [];\n      for (const eMap of aMap.values()) {\n        res.push(...triplesByValue(eMap, v));\n      }\n      return res;\n    }\n    case \"v\": {\n      const res = [];\n      for (const eMap of store.eav.values()) {\n        for (const aMap of eMap.values()) {\n          res.push(...triplesByValue(aMap, v));\n        }\n      }\n    }\n    default: {\n      return allMapValues(store.eav, 3);\n    }\n  }\n}\n\nexport function transact(store, txSteps) {\n  return create(store, (draft) => {\n    txSteps.forEach((txStep) => {\n      applyTxStep(draft, txStep);\n    });\n  });\n}\n"]}