{"version":3,"file":"presence.js","sourceRoot":"","sources":["../../src/presence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AACpC,OAAO,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAyC5E,MAAM,UAAU,kBAAkB,CAIhC,IAGC,EACD,IAAuC,EACvC,UAAkB;;IAElB,MAAM,KAAK,GAAuC;QAChD,KAAK,EAAE,EAAE;KACV,CAAC;IAEF,MAAM,WAAW,GAAG,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAE9D,IAAI,WAAW,EAAE,CAAC;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAA,IAAI,CAAC,IAAI,mCAAI,EAAE,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,CAAC;QAC/C,KAAK,CAAC,IAAI,mCAAQ,IAAI,KAAE,MAAM,EAAE,UAAU,GAAE,CAAC;IAC/C,CAAC;IAED,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAA,IAAI,CAAC,KAAK,mCAAI,EAAE,CAAC,EAAE,CAAC;QAC/C,MAAM,qBAAqB,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,MAAK,SAAS,CAAC;QACxD,MAAM,cAAc,GAClB,KAAK,CAAC,OAAO,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,KAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAC;QAEzD,IAAI,qBAAqB,IAAI,cAAc,EAAE,CAAC;YAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,CAAC;YAC9C,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,mCAAQ,IAAI,KAAE,MAAM,EAAE,EAAE,GAAE,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,0BAA0B,CAIxC,CAAwC,EACxC,CAAwC;IAExC,IAAI,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;QAAE,OAAO,IAAI,CAAC;IAC7C,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;QAAE,OAAO,IAAI,CAAC;IAErC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;QAEpC,MAAM,IAAI,GAAG,sBAAsB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;IACzB,CAAC;IAED,MAAM,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IAEtD,IAAI,CAAC,QAAQ;QAAE,OAAO,IAAI,CAAC;IAE3B,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACtC,MAAM,IAAI,GAAG,sBAAsB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;IACzB,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { pick } from \"./utils/pick\";\nimport { areObjectsShallowEqual, areObjectKeysEqual } from \"./utils/object\";\n\nexport type RoomSchemaShape = {\n  [k: string]: {\n    presence?: { [k: string]: any };\n    topics?: {\n      [k: string]: {\n        [k: string]: any;\n      };\n    };\n  };\n};\n\nexport type PresenceOpts<PresenceShape, Keys extends keyof PresenceShape> = {\n  user?: boolean;\n  peers?: string[];\n  keys?: Keys[];\n};\n\ntype PresencePeer<PresenceShape, Keys extends keyof PresenceShape> = Pick<\n  PresenceShape,\n  Keys\n> & {\n  peerId: string;\n};\n\nexport type PresenceSlice<PresenceShape, Keys extends keyof PresenceShape> = {\n  user?: PresencePeer<PresenceShape, Keys>;\n  peers: {\n    [peerId: string]: PresencePeer<PresenceShape, Keys>;\n  };\n};\n\nexport type PresenceResponse<\n  PresenceShape,\n  Keys extends keyof PresenceShape,\n> = PresenceSlice<PresenceShape, Keys> & {\n  isLoading: boolean;\n  error?: string;\n};\n\nexport function buildPresenceSlice<\n  PresenceShape,\n  Keys extends keyof PresenceShape,\n>(\n  data: {\n    user?: PresenceShape;\n    peers: Record<string, PresenceShape>;\n  },\n  opts: PresenceOpts<PresenceShape, Keys>,\n  userPeerId: string,\n): PresenceSlice<PresenceShape, Keys> {\n  const slice: PresenceSlice<PresenceShape, Keys> = {\n    peers: {},\n  };\n\n  const includeUser = opts && \"user\" in opts ? opts.user : true;\n\n  if (includeUser) {\n    const user = pick(data.user ?? {}, opts?.keys);\n    slice.user = { ...user, peerId: userPeerId };\n  }\n\n  for (const id of Object.keys(data.peers ?? {})) {\n    const shouldIncludeAllPeers = opts?.peers === undefined;\n    const isPeerIncluded =\n      Array.isArray(opts?.peers) && opts?.peers.includes(id);\n\n    if (shouldIncludeAllPeers || isPeerIncluded) {\n      const peer = pick(data.peers[id], opts?.keys);\n      slice.peers[id] = { ...peer, peerId: id };\n    }\n  }\n\n  return slice;\n}\n\n/**\n * Compare two presence slices\n * 0. compare isLoading and error\n * 1. shallow compare user\n * 2. compare peers keys\n * 3. shallow compare each peer\n */\nexport function hasPresenceResponseChanged<\n  PresenceShape,\n  Keys extends keyof PresenceShape,\n>(\n  a: PresenceResponse<PresenceShape, Keys>,\n  b: PresenceResponse<PresenceShape, Keys>,\n) {\n  if (a.isLoading !== b.isLoading) return true;\n  if (a.error !== b.error) return true;\n\n  if (a.user || b.user) {\n    if (!a.user || !b.user) return true;\n\n    const same = areObjectsShallowEqual(a.user, b.user);\n\n    if (!same) return true;\n  }\n\n  const sameKeys = areObjectKeysEqual(a.peers, b.peers);\n\n  if (!sameKeys) return true;\n\n  for (const id of Object.keys(a.peers)) {\n    const same = areObjectsShallowEqual(a.peers[id], b.peers[id]);\n\n    if (!same) return true;\n  }\n\n  return false;\n}\n"]}