{"version":3,"file":"init.js","sourceRoot":"","sources":["../src/init.ts"],"names":[],"mappings":";;AA4BA,oBAKC;AAED,8CAgBC;AA7CD,uDAAoD;AAEpD;;;;;;;;;;;;;;;;;;;GAmBG;AACH,SAAgB,IAAI,CAGlB,MAAc;IACd,OAAO,IAAI,iCAAe,CAAqB,MAAM,CAAC,CAAC;AACzD,CAAC;AAED,SAAgB,iBAAiB,CAI/B,MAGC;IAED,OAAO,IAAI,iCAAe,CAMxB,MAAM,CAAC,CAAC;AACZ,CAAC","sourcesContent":["import type {\n  // types\n  Config,\n  InstantGraph,\n  RoomSchemaShape,\n} from \"@instantdb/core\";\nimport { InstantReactWeb } from \"./InstantReactWeb\";\n\n/**\n *\n * The first step: init your application!\n *\n * Visit https://instantdb.com/dash to get your `appId` :)\n *\n * @example\n *  const db = init({ appId: \"my-app-id\" })\n *\n * // You can also provide a schema for type safety and editor autocomplete!\n *\n *  type Schema = {\n *    goals: {\n *      title: string\n *    }\n *  }\n *\n *  const db = init<Schema>({ appId: \"my-app-id\" })\n *\n */\nexport function init<\n  Schema extends {} = {},\n  RoomSchema extends RoomSchemaShape = {},\n>(config: Config) {\n  return new InstantReactWeb<Schema, RoomSchema>(config);\n}\n\nexport function init_experimental<\n  Schema extends InstantGraph<any, any, any>,\n  WithCardinalityInference extends boolean = true,\n>(\n  config: Config & {\n    schema: Schema;\n    cardinalityInference?: WithCardinalityInference;\n  },\n) {\n  return new InstantReactWeb<\n    Schema,\n    Schema extends InstantGraph<any, any, infer RoomSchema>\n      ? RoomSchema\n      : never,\n    WithCardinalityInference\n  >(config);\n}\n"]}